include "globals.mzn";

%Declaration of variables
var 0..1:LGS;
var 0..1:Pilot_Interface;
0..3:IN_Handle;
array[1..3] of var 0..3:Light;
var 0..1:Hydraulic_Circuit;
array[1..3] of var 0..1:Gear_Set;
var 0..3:f_Gear;
var 0..3:r_Gear;
var 0..3:l_Gear;
array[1..2] of var 0..2:f_G_Latching_box;
array[1..2] of var 0..2:r_G_Latching_box;
array[1..2] of var 0..2:l_G_Latching_box;
array[1..3] of var 0..1:Door_Set;
var 0..2:f_Door;
var 0..2:r_Door;
var 0..2:l_Door;
array[1..2] of var 0..2:f_D_Latching_box;
array[1..2] of var 0..2:r_D_Latching_box;
array[1..2] of var 0..2:l_D_Latching_box;
var 0..1:Cylinder_Set;
var 0..2:f_G_Cylinder;
var 0..2:r_G_Cylinder;
var 0..2:l_G_Cylinder;
var 0..2:f_D_Cylinder;
var 0..2:r_D_Cylinder;
var 0..2:l_D_Cylinder;
0..2:IN_G_cylinders;
0..2:IN_D_cylinders;
array[1..5] of var 0..1:EV;
array[1..5] of 0..1:IN_Hin;
array[1..5] of 0..1:IN_Hout;
var 0..1:Sensors;
array[1..3] of 0..2:IN_Handle_Sensor;
array[1..3] of 0..3:IN_f_gearPosition_Sensor;
array[1..3] of 0..3:IN_l_gearPosition_Sensor;
array[1..3] of 0..3:IN_r_gearPosition_Sensor;
array[1..3] of 0..2:IN_f_door_Sensor;
array[1..3] of 0..2:IN_l_door_Sensor;
array[1..3] of 0..2:IN_r_door_Sensor;
array[1..3] of var 0..2:Analog_switch_Sensor;
array[1..3] of var 0..2:f_shockAbsorber_Sensor;
array[1..3] of var 0..2:l_shockAbsorber_Sensor;
array[1..3] of var 0..2:r_shockAbsorber_Sensor;
array[1..3] of var 0..2:Circuit_pressuried_Sensor;
array[1..2] of var 0..1:Digital_Controller;
array[1..2] of var 0..1:EV_Commands;
array[1..2] of 0..1:IN_General_EV;
array[1..2] of 0..1:IN_close_EV;
array[1..2] of 0..1:IN_open_EV;
array[1..2] of 0..1:IN_retract_EV;
array[1..2] of 0..1:IN_extend_EV;
array[1..2] of var 0..1:Cockpit_commands;
array[1..2] of var 0..1:gear_locked_down;
array[1..2] of var 0..1:gear_maneuvering;
array[1..2] of 0..1:IN_anomaly;
var 0..1:Manual_Crank;
var 0..1:Analog_Controller;
0..1:IN_Time_to_close_switch;
float:AS_Time_to_open;
float:AS_Time_to_open_limit;
float:AS_Time_to_close;
float:AS_Time_to_close_limit;
float:EV_Time_to_open;
float:EV_Time_to_open_limit;
float:EV_Time_to_close;
float:EV_Time_to_close_limit;
float:Cy_Time_to_down;
float:Cy_Time_to_down_limit;
float:Cy_Time_to_high;
float:Cy_Time_to_high_limit;
var 0..1:random;
array[1..3] of var 0..2:OUT_Handle_Sensor;
var 0..3:OUT_Handle;
var 0..2:OUT_G_cylinders;
var 0..2:OUT_D_cylinders;
array[1..5] of var 0..1:OUT_Hin;
array[1..5] of var 0..1:OUT_Hout;
array[1..3] of var 0..3:OUT_f_gearPosition_Sensor;
array[1..3] of var 0..3:OUT_l_gearPosition_Sensor;
array[1..3] of var 0..3:OUT_r_gearPosition_Sensor;
array[1..3] of var 0..2:OUT_f_door_Sensor;
array[1..3] of var 0..2:OUT_l_door_Sensor;
array[1..3] of var 0..2:OUT_r_door_Sensor;
array[1..2] of var 0..1:OUT_General_EV;
array[1..2] of var 0..1:OUT_close_EV;
array[1..2] of var 0..1:OUT_open_EV;
array[1..2] of var 0..1:OUT_retract_EV;
array[1..2] of var 0..1:OUT_extend_EV;
array[1..2] of var 0..1:OUT_anomaly;
var 0..1:OUT_Time_to_close_switch;

%Flexing constraints from imported models
var int: Flex;
var 0..1: Flex1;
constraint Flex1 = 1 <-> (LGS=1);
var 0..1: Flex2;
constraint Flex2 = 1 <-> (LGS=Pilot_Interface);
var 0..1: Flex3;
constraint Flex3 = 1 <-> (LGS>=Hydraulic_Circuit);
var 0..1: Flex4;
constraint Flex4 = 1 <-> (2*LGS>=Digital_Controller[1]+Digital_Controller[2]);
var 0..1: Flex5;
constraint Flex5 = 1 <-> (Hydraulic_Circuit=1 -> Digital_Controller[1]+Digital_Controller[2]=2);
var 0..1: Flex6;
constraint Flex6 = 1 <-> (Hydraulic_Circuit*Analog_Controller=0);
var 0..1: Flex7;
constraint Flex7 = 1 <-> (Pilot_Interface=1);
var 0..1: Flex8;
constraint Flex8 = 1 <-> (Pilot_Interface>0 -> OUT_Handle >0 /\ (Light[1]>1 /\ Light[2]>1 /\ Light[3]>1));
var 0..1: Flex9;
constraint Flex9 = 1 <-> (Hydraulic_Circuit = Cylinder_Set);
var 0..1: Flex10;
constraint Flex10 = 1 <-> (f_D_Cylinder >0 <-> Cylinder_Set>0);
var 0..1: Flex11;
constraint Flex11 = 1 <-> (r_D_Cylinder >0 <-> Cylinder_Set>0);
var 0..1: Flex12;
constraint Flex12 = 1 <-> (l_D_Cylinder >0 <-> Cylinder_Set>0);
var 0..1: Flex13;
constraint Flex13 = 1 <-> (f_G_Cylinder >0 <-> Cylinder_Set>0);
var 0..1: Flex14;
constraint Flex14 = 1 <-> (r_G_Cylinder >0 <-> Cylinder_Set>0);
var 0..1: Flex15;
constraint Flex15 = 1 <-> (l_G_Cylinder >0 <-> Cylinder_Set>0);
var 0..1: Flex16;
constraint Flex16 = 1 <-> (Hydraulic_Circuit=1 -> (Gear_Set[1]+Gear_Set[2]+Gear_Set[3] = 3 ));
var 0..1: Flex17;
constraint Flex17 = 1 <-> (f_Gear>0 <-> Gear_Set[1]=1);
var 0..1: Flex18;
constraint Flex18 = 1 <-> ((f_G_Latching_box[1]*f_G_Latching_box[2]>0) <-> Gear_Set[1]=1);
var 0..1: Flex19;
constraint Flex19 = 1 <-> (r_Gear>0 <-> Gear_Set[2]=1);
var 0..1: Flex20;
constraint Flex20 = 1 <-> ((r_G_Latching_box[1]*r_G_Latching_box[2]>0) <-> Gear_Set[2]=1);
var 0..1: Flex21;
constraint Flex21 = 1 <-> (l_Gear>0 <-> Gear_Set[3]=1);
var 0..1: Flex22;
constraint Flex22 = 1 <-> ((l_G_Latching_box[1]*l_G_Latching_box[2]>0) <-> Gear_Set[3]=1);
var 0..1: Flex23;
constraint Flex23 = 1 <-> (Hydraulic_Circuit=1 -> (Door_Set[1]+Door_Set[2]+Door_Set[3] = 3 ));
var 0..1: Flex24;
constraint Flex24 = 1 <-> (f_Door>0 <-> Door_Set[1]=1);
var 0..1: Flex25;
constraint Flex25 = 1 <-> ((f_D_Latching_box[1]*f_D_Latching_box[2]>0) <-> Door_Set[1]=1);
var 0..1: Flex26;
constraint Flex26 = 1 <-> (r_Door>0 <-> Door_Set[2]=1);
var 0..1: Flex27;
constraint Flex27 = 1 <-> ((r_D_Latching_box[1]*r_D_Latching_box[2]>0) <-> Door_Set[2]=1);
var 0..1: Flex28;
constraint Flex28 = 1 <-> (l_Door>0 <-> Door_Set[3]=1);
var 0..1: Flex29;
constraint Flex29 = 1 <-> ((l_D_Latching_box[1]*l_D_Latching_box[2]>0) <-> Door_Set[3]=1);
var 0..1: Flex30;
constraint Flex30 = 1 <-> (Hydraulic_Circuit=Sensors);
var 0..1: Flex31;
constraint Flex31 = 1 <-> (Analog_switch_Sensor[1]*Analog_switch_Sensor[2]*Analog_switch_Sensor[3] >0 <-> Sensors>0);
var 0..1: Flex32;
constraint Flex32 = 1 <-> (OUT_f_gearPosition_Sensor[1]*OUT_f_gearPosition_Sensor[2]*OUT_f_gearPosition_Sensor[3] >0 <-> Sensors>0);
var 0..1: Flex33;
constraint Flex33 = 1 <-> (OUT_r_gearPosition_Sensor[1]*OUT_r_gearPosition_Sensor[2]*OUT_r_gearPosition_Sensor[3] >0 <-> Sensors>0);
var 0..1: Flex34;
constraint Flex34 = 1 <-> (OUT_l_gearPosition_Sensor[1]*OUT_l_gearPosition_Sensor[2]*OUT_l_gearPosition_Sensor[3] >0 <-> Sensors>0);
var 0..1: Flex35;
constraint Flex35 = 1 <-> (OUT_f_door_Sensor[1]*OUT_f_door_Sensor[2]*OUT_f_door_Sensor[3] >0 <-> Sensors>0);
var 0..1: Flex36;
constraint Flex36 = 1 <-> (OUT_r_door_Sensor[1]*OUT_r_door_Sensor[2]*OUT_r_door_Sensor[3] >0 <-> Sensors>0);
var 0..1: Flex37;
constraint Flex37 = 1 <-> (OUT_l_door_Sensor[1]*OUT_l_door_Sensor[2]*OUT_l_door_Sensor[3] >0 <-> Sensors>0);
var 0..1: Flex38;
constraint Flex38 = 1 <-> (f_shockAbsorber_Sensor[1]*f_shockAbsorber_Sensor[2]*f_shockAbsorber_Sensor[3] >0 <-> Sensors>0);
var 0..1: Flex39;
constraint Flex39 = 1 <-> (r_shockAbsorber_Sensor[1]*r_shockAbsorber_Sensor[2]*r_shockAbsorber_Sensor[3] >0 <-> Sensors>0);
var 0..1: Flex40;
constraint Flex40 = 1 <-> (l_shockAbsorber_Sensor[1]*l_shockAbsorber_Sensor[2]*l_shockAbsorber_Sensor[3] >0 <-> Sensors>0);
var 0..1: Flex41;
constraint Flex41 = 1 <-> (Circuit_pressuried_Sensor[1]*Circuit_pressuried_Sensor[2]*Circuit_pressuried_Sensor[3] >0 <-> Sensors>0);
var 0..1: Flex42;
constraint Flex42 = 1 <-> (Hydraulic_Circuit>0 <-> EV[1]*EV[2]*EV[3]*EV[4]*EV[5]>0);
var 0..1: Flex43;
constraint Flex43 = 1 <-> (OUT_Hin[1]>0 <-> EV[1]>0);
var 0..1: Flex44;
constraint Flex44 = 1 <-> (OUT_Hin[2]>0 <-> EV[2]>0);
var 0..1: Flex45;
constraint Flex45 = 1 <-> (OUT_Hin[3]>0 <-> EV[3]>0);
var 0..1: Flex46;
constraint Flex46 = 1 <-> (OUT_Hin[4]>0 <-> EV[4]>0);
var 0..1: Flex47;
constraint Flex47 = 1 <-> (OUT_Hin[5]>0 <-> EV[5]>0);
var 0..1: Flex48;
constraint Flex48 = 1 <-> (OUT_Hout[1]>0 -> EV[1]>0);
var 0..1: Flex49;
constraint Flex49 = 1 <-> (OUT_Hout[2]>0 -> EV[2]>0);
var 0..1: Flex50;
constraint Flex50 = 1 <-> (OUT_Hout[3]>0 -> EV[3]>0);
var 0..1: Flex51;
constraint Flex51 = 1 <-> (OUT_Hout[4]>0 -> EV[4]>0);
var 0..1: Flex52;
constraint Flex52 = 1 <-> (OUT_Hout[5]>0 -> EV[5]>0);
var 0..1: Flex53;
constraint Flex53 = 1 <-> (EV_Commands[1]=Digital_Controller[1]);
var 0..1: Flex54;
constraint Flex54 = 1 <-> (EV_Commands[1]>=OUT_retract_EV[1] /\ EV_Commands[1]>=OUT_extend_EV[1] /\ OUT_retract_EV[1]*OUT_extend_EV[1]=0);
var 0..1: Flex55;
constraint Flex55 = 1 <-> (EV_Commands[1]>=OUT_open_EV[1] /\ EV_Commands[1]>=OUT_close_EV[1] /\ OUT_open_EV[1]*OUT_close_EV[1]=0);
var 0..1: Flex56;
constraint Flex56 = 1 <-> (OUT_General_EV[1] >0 -> EV_Commands[1]>0);
var 0..1: Flex57;
constraint Flex57 = 1 <-> (EV_Commands[2]=Digital_Controller[2]);
var 0..1: Flex58;
constraint Flex58 = 1 <-> (EV_Commands[2]>=OUT_retract_EV[2] /\ EV_Commands[2]>=OUT_extend_EV[2] /\ OUT_retract_EV[2]*OUT_extend_EV[2]=0);
var 0..1: Flex59;
constraint Flex59 = 1 <-> (EV_Commands[2]>=OUT_open_EV[2] /\ EV_Commands[2]>=OUT_close_EV[2] /\ OUT_open_EV[2]*OUT_close_EV[2]=0);
var 0..1: Flex60;
constraint Flex60 = 1 <-> (OUT_General_EV[2] >0 -> EV_Commands[2]>0);
var 0..1: Flex61;
constraint Flex61 = 1 <-> (Cockpit_commands[1]=Digital_Controller[1]);
var 0..1: Flex62;
constraint Flex62 = 1 <-> (Cockpit_commands[1] >= gear_locked_down[1]);
var 0..1: Flex63;
constraint Flex63 = 1 <-> (Cockpit_commands[1] >= gear_maneuvering[1]);
var 0..1: Flex64;
constraint Flex64 = 1 <-> (Cockpit_commands[1] >= OUT_anomaly[1]);
var 0..1: Flex65;
constraint Flex65 = 1 <-> (gear_locked_down[1] + gear_maneuvering[1] + OUT_anomaly[1] <= 3);
var 0..1: Flex66;
constraint Flex66 = 1 <-> (Cockpit_commands[2]=Digital_Controller[2]);
var 0..1: Flex67;
constraint Flex67 = 1 <-> (Cockpit_commands[2] >= gear_locked_down[2]);
var 0..1: Flex68;
constraint Flex68 = 1 <-> (Cockpit_commands[2] >= gear_maneuvering[2]);
var 0..1: Flex69;
constraint Flex69 = 1 <-> (Cockpit_commands[2] >= OUT_anomaly[2]);
var 0..1: Flex70;
constraint Flex70 = 1 <-> (gear_locked_down[2] + gear_maneuvering[2] + OUT_anomaly[2] <= 3);
var 0..1: Flex71;
constraint Flex71 = 1 <-> (LGS>=Manual_Crank);
var 0..1: Flex72;
constraint Flex72 = 1 <-> (LGS>=Analog_Controller);
var 0..1: Flex73;
constraint Flex73 = 1 <-> (OUT_Time_to_close_switch=0);
var 0..1: Flex74;
constraint Flex74 = 1 <-> (OUT_G_cylinders = IN_G_cylinders);
var 0..1: Flex75;
constraint Flex75 = 1 <-> (OUT_D_cylinders = IN_D_cylinders);
var 0..1: Flex76;
constraint Flex76 = 1 <-> (OUT_Handle>0);
Flex = Flex1+Flex2+Flex3+Flex4+Flex5+Flex6+Flex7+Flex8+Flex9+Flex10+Flex11+Flex12+Flex13+Flex14+Flex15+Flex16+Flex17+Flex18+Flex19+Flex20+Flex21+Flex22+Flex23+Flex24+Flex25+Flex26+Flex27+Flex28+Flex29+Flex30+Flex31+Flex32+Flex33+Flex34+Flex35+Flex36+Flex37+Flex38+Flex39+Flex40+Flex41+Flex42+Flex43+Flex44+Flex45+Flex46+Flex47+Flex48+Flex49+Flex50+Flex51+Flex52+Flex53+Flex54+Flex55+Flex56+Flex57+Flex58+Flex59+Flex60+Flex61+Flex62+Flex63+Flex64+Flex65+Flex66+Flex67+Flex68+Flex69+Flex70+Flex71+Flex72+Flex73+Flex74+Flex75+Flex76;


%Declaration of composite states and their Hierarchy
var 0..1:LGS_Nominal;
var 0..1:general_Nominal_cl;
var 0..1:general_Nominal;
var 0..1:handle;
var 0..1:handle_up;
var 0..1:handle_down;
var 0..1:handle_inactive;
var 0..1:gears_cl;
var 0..1:retracted;
var 0..1:extended;
var 0..1:failure_gear;
var 0..1:doors_cl;
var 0..1:Opened;
var 0..1:Closed;
var 0..1:failure_doors;
var 0..1:cynlinders_cl;
var 0..1:cylinder_states;
var 0..1:gear_cylinder_cl;
var 0..1:inactive_G_cylinders;
var 0..1:G_cylinders_high;
var 0..1:G_cylinders_down;
var 0..1:door_cylinder_cl;
var 0..1:inactive_D_cylinders;
var 0..1:D_cylinders_high;
var 0..1:D_cylinders_down;
var 0..1:failure_cylinder;
var 0..1:electro_valves_cl;
var 0..1:electro_valves_states;
var 0..1:general_EV_cl;
var 0..1:nn_pressurized_general_EV;
var 0..1:pressurized_general_EV;
var 0..1:close_EV_cl;
var 0..1:nn_pressurized_close_EV;
var 0..1:pressurized_close_EV;
var 0..1:open_EV_cl;
var 0..1:nn_pressurized_open_EV;
var 0..1:pressurized_open_EV;
var 0..1:retract_EV_cl;
var 0..1:nn_pressurized_retract_EV;
var 0..1:pressurized_retract_EV;
var 0..1:extend_EV_cl;
var 0..1:nn_pressurized_extend_EV;
var 0..1:pressurized_extend_EV;
var 0..1:failure_EV;
var 0..1:Analog_switch_cl;
var 0..1:Analog_switch_closed;
var 0..1:Analog_switch_open;
var 0..1:failure_analog_switch;
var 0..1:LGS_Analog;
var 0..1:general_Alanlog_cl;
var 0..1:general_Analog;

constraint general_Nominal = 1 -> ((Hydraulic_Circuit=1 ) /\(Digital_Controller [1]+Digital_Controller [2]=2 ));
constraint handle_up = 1 -> ((OUT_Handle_Sensor [ 1 ]=1 /\ OUT_Handle_Sensor [ 2 ]=1 /\ OUT_Handle_Sensor [ 3]=1 ));
constraint handle_down = 1 -> ((OUT_Handle_Sensor [ 1 ]=2 /\ OUT_Handle_Sensor [ 2 ]=2 /\ OUT_Handle_Sensor [ 3 ]=2 ));
constraint handle_inactive = 1 -> ((OUT_Handle_Sensor [ 1 ]=0 /\ OUT_Handle_Sensor [ 2 ]=0 /\ OUT_Handle_Sensor [ 3 ]=0 /\ OUT_General_EV[1] =0 /\ OUT_General_EV[2] =0 ));
constraint retracted = 1 -> ((OUT_f_gearPosition_Sensor [1] = 2 ) /\(OUT_f_gearPosition_Sensor [2] = 2 ) /\(OUT_f_gearPosition_Sensor [3] = 2 ) /\(OUT_r_gearPosition_Sensor [1] = 2 ) /\(OUT_r_gearPosition_Sensor [2] = 2 ) /\(OUT_r_gearPosition_Sensor [3] = 2 ) /\(OUT_l_gearPosition_Sensor [1] = 2 ) /\(OUT_l_gearPosition_Sensor [2] = 2 ) /\(OUT_l_gearPosition_Sensor [3] = 2 ) /\(Light[1]=0 ) /\(Light[2]=0 ) /\(Light[3]=0 ) /\((IN_D_cylinders=2 /\ ( (IN_f_gearPosition_Sensor [1] = 2 \/ IN_f_gearPosition_Sensor [2] = 2 \/ IN_f_gearPosition_Sensor [3] = 2 \/ IN_r_gearPosition_Sensor [1] = 2 \/ IN_r_gearPosition_Sensor [2] = 2 \/ IN_r_gearPosition_Sensor [3] = 2 \/ IN_l_gearPosition_Sensor [1] = 2 \/ IN_l_gearPosition_Sensor [2] = 2 \/ IN_l_gearPosition_Sensor [3] = 2)) /\ (IN_Handle_Sensor[1]=1 /\ IN_Handle_Sensor[2]=1 /\ IN_Handle_Sensor[3]=1)) -> OUT_retract_EV[1]=0 /\ OUT_retract_EV[2]=0 ) /\((IN_D_cylinders=2 /\ ( (IN_f_gearPosition_Sensor [1] = 2 \/ IN_f_gearPosition_Sensor [2] = 2 \/ IN_f_gearPosition_Sensor [3] = 2 \/ IN_r_gearPosition_Sensor [1] = 2 \/ IN_r_gearPosition_Sensor [2] = 2 \/ IN_r_gearPosition_Sensor [3] = 2 \/ IN_l_gearPosition_Sensor [1] = 2 \/ IN_l_gearPosition_Sensor [2] = 2 \/ IN_l_gearPosition_Sensor [3] = 2)) /\ (IN_Handle_Sensor[1]=1 /\ IN_Handle_Sensor[2]=1 /\ IN_Handle_Sensor[3]=1)) -> OUT_open_EV[1]=0 /\ OUT_open_EV[2]=0 ) /\((IN_D_cylinders=2 /\ ( (IN_f_gearPosition_Sensor [1] = 2 \/ IN_f_gearPosition_Sensor [2] = 2 \/ IN_f_gearPosition_Sensor [3] = 2 \/ IN_r_gearPosition_Sensor [1] = 2 \/ IN_r_gearPosition_Sensor [2] = 2 \/ IN_r_gearPosition_Sensor [3] = 2 \/ IN_l_gearPosition_Sensor [1] = 2 \/ IN_l_gearPosition_Sensor [2] = 2 \/ IN_l_gearPosition_Sensor [3] = 2)) /\ (IN_Handle_Sensor[1]=1 /\ IN_Handle_Sensor[2]=1 /\ IN_Handle_Sensor[3]=1)) -> (OUT_close_EV[1]=1 /\ OUT_close_EV[2]=1) ) /\(((IN_Hout[1] = IN_Hin[1] /\ IN_Hout[2] = 0 /\ IN_Hout[3] = 0 /\ IN_Hout[4] = 0 /\ IN_Hout[5] = 0 ) /\ (IN_f_gearPosition_Sensor [1] = 2 \/ IN_f_gearPosition_Sensor [2] = 2\/ IN_f_gearPosition_Sensor [3] = 2 \/ IN_r_gearPosition_Sensor [1] = 2 \/ IN_r_gearPosition_Sensor [2] = 2 \/ IN_r_gearPosition_Sensor [3] = 2 \/ IN_l_gearPosition_Sensor [1] = 2 \/ IN_l_gearPosition_Sensor [2] = 2 \/ IN_l_gearPosition_Sensor [3] = 2) /\ (IN_Handle_Sensor[1]=1 /\ IN_Handle_Sensor[2]=1)) -> (OUT_Handle=0) ));
constraint extended = 1 -> ((OUT_f_gearPosition_Sensor [1] = 1 ) /\(OUT_f_gearPosition_Sensor [2] = 1 ) /\(OUT_f_gearPosition_Sensor [3] = 1 ) /\(OUT_r_gearPosition_Sensor [1] = 1 ) /\(OUT_r_gearPosition_Sensor [2] = 1 ) /\(OUT_r_gearPosition_Sensor [3] = 1 ) /\(OUT_l_gearPosition_Sensor [1] = 1 ) /\(OUT_l_gearPosition_Sensor [2] = 1 ) /\(OUT_l_gearPosition_Sensor [3] = 1 ) /\(Light[1]=2 ) /\(Light[2]=2 ) /\(Light[3]=2 ) /\((IN_D_cylinders=2 /\ ((IN_f_gearPosition_Sensor [1] = 1 \/ IN_f_gearPosition_Sensor [2] = 1 \/ IN_f_gearPosition_Sensor [3] = 1 \/ IN_r_gearPosition_Sensor [1] = 1 \/ IN_r_gearPosition_Sensor [2] = 1 \/ IN_r_gearPosition_Sensor [3] = 1 \/ IN_l_gearPosition_Sensor [1] = 1 \/ IN_l_gearPosition_Sensor [2] = 1 \/ IN_l_gearPosition_Sensor [3] = 1)) /\ (IN_Handle_Sensor[1]=2 /\ IN_Handle_Sensor[2]=2 /\ IN_Handle_Sensor[3]=2)) -> OUT_extend_EV[1]=0 /\ OUT_extend_EV[2]=0 ) /\((IN_D_cylinders=2 /\ ((IN_f_gearPosition_Sensor [1] = 1 \/ IN_f_gearPosition_Sensor [2] = 1 \/ IN_f_gearPosition_Sensor [3] = 1 \/ IN_r_gearPosition_Sensor [1] = 1 \/ IN_r_gearPosition_Sensor [2] = 1 \/ IN_r_gearPosition_Sensor [3] = 1 \/ IN_l_gearPosition_Sensor [1] = 1 \/ IN_l_gearPosition_Sensor [2] = 1 \/ IN_l_gearPosition_Sensor [3] = 1)) /\ (IN_Handle_Sensor[1]=2 /\ IN_Handle_Sensor[2]=2 /\ IN_Handle_Sensor[3]=2)) -> (OUT_open_EV[1]=0 /\ OUT_open_EV[2]=0) ) /\((IN_D_cylinders=2 /\ ((IN_f_gearPosition_Sensor [1] = 1 \/ IN_f_gearPosition_Sensor [2] = 1 \/ IN_f_gearPosition_Sensor [3] = 1 \/ IN_r_gearPosition_Sensor [1] = 1 \/ IN_r_gearPosition_Sensor [2] = 1 \/ IN_r_gearPosition_Sensor [3] = 1 \/ IN_l_gearPosition_Sensor [1] = 1 \/ IN_l_gearPosition_Sensor [2] = 1 \/ IN_l_gearPosition_Sensor [3] = 1)) /\ (IN_Handle_Sensor[1]=2 /\ IN_Handle_Sensor[2]=2 /\ IN_Handle_Sensor[3]=2)) -> (OUT_close_EV[1]=1 /\ OUT_close_EV[2]=1) ) /\(gear_locked_down [1] =1 /\ gear_locked_down [2] =1 ) /\(((IN_Hout[1] = IN_Hin[1] /\ IN_Hout[2] = 0 /\ IN_Hout[3] = 0 /\ IN_Hout[4] = 0 /\ IN_Hout[5] = 0) /\ (IN_f_gearPosition_Sensor [1] = 1 \/ IN_f_gearPosition_Sensor [2] = 1 \/ IN_f_gearPosition_Sensor [3] = 1 \/ IN_r_gearPosition_Sensor [1] = 1 \/ IN_r_gearPosition_Sensor [2] = 1 \/ IN_r_gearPosition_Sensor [3] = 1 \/ IN_l_gearPosition_Sensor [1] = 1 \/ IN_l_gearPosition_Sensor [2] = 1 \/ IN_l_gearPosition_Sensor [3] = 1) /\ (IN_Handle_Sensor[1]=2 /\ IN_Handle_Sensor[2]=2)) -> (OUT_Handle=0) ));
constraint failure_gear = 1 -> ((OUT_anomaly[1]=1 /\ OUT_anomaly[2]=1 ));
constraint Opened = 1 -> ((OUT_f_door_Sensor [1] = 2 ) /\(OUT_f_door_Sensor [2] = 2 ) /\(OUT_f_door_Sensor [3] = 2 ) /\(OUT_r_door_Sensor [1] = 2 ) /\(OUT_r_door_Sensor [2] = 2 ) /\(OUT_r_door_Sensor [3] = 2 ) /\(OUT_l_door_Sensor [1] = 2 ) /\(OUT_l_door_Sensor [2] = 2 ) /\(OUT_l_door_Sensor [3] = 2 ) /\(( (IN_Hout[3] = 1) /\ (IN_D_cylinders=2) /\ (IN_f_gearPosition_Sensor [1] = 2 \/ IN_f_gearPosition_Sensor [2] = 2 \/ IN_f_gearPosition_Sensor [3] = 2 \/ IN_r_gearPosition_Sensor [1] = 2 \/ IN_r_gearPosition_Sensor [2] = 2 \/ IN_r_gearPosition_Sensor [3] = 2 \/ IN_l_gearPosition_Sensor [1] = 2 \/ IN_l_gearPosition_Sensor [2] = 2 \/ IN_l_gearPosition_Sensor [3] = 2) /\ (IN_Handle_Sensor[1]=2 /\ IN_Handle_Sensor[2]=2)) -> (OUT_extend_EV[1]=1 /\ OUT_extend_EV[2]=1) ) /\(( (IN_Hout[3] = 1) /\ (IN_D_cylinders=2) /\ (IN_f_gearPosition_Sensor [1] = 1 \/ IN_f_gearPosition_Sensor [2] = 1 \/ IN_f_gearPosition_Sensor [3] = 1 \/ IN_r_gearPosition_Sensor [1] = 1 \/ IN_r_gearPosition_Sensor [2] = 1 \/ IN_r_gearPosition_Sensor [3] = 1 \/ IN_l_gearPosition_Sensor [1] = 1 \/ IN_l_gearPosition_Sensor [2] = 1 \/ IN_l_gearPosition_Sensor [3] = 1) /\ (IN_Handle_Sensor[1]=1 /\ IN_Handle_Sensor[2]=1)) -> (OUT_retract_EV[1]=1 /\ OUT_retract_EV[2]=1) ));
constraint Closed = 1 -> ((OUT_f_door_Sensor [1] = 1 ) /\(OUT_f_door_Sensor [2] = 1 ) /\(OUT_f_door_Sensor [3] = 1 ) /\(OUT_r_door_Sensor [1] = 1 ) /\(OUT_r_door_Sensor [2] = 1 ) /\(OUT_r_door_Sensor [3] = 1 ) /\(OUT_l_door_Sensor [1] = 1 ) /\(OUT_l_door_Sensor [2] = 1 ) /\(OUT_l_door_Sensor [3] = 1 ));
constraint failure_doors = 1 -> ((OUT_anomaly[1]=1 /\ OUT_anomaly[2]=1 ));
constraint inactive_G_cylinders = 1 -> ((random=1 ));
constraint G_cylinders_high = 1 -> ((f_G_Latching_box[1]= 2 ) /\(f_G_Latching_box[2]= 1 ) /\(r_G_Latching_box[1]= 2 ) /\(r_G_Latching_box[2]= 1 ) /\(l_G_Latching_box[1]= 2 ) /\(l_G_Latching_box[2]= 1 ) /\(OUT_G_cylinders=1 ));
constraint G_cylinders_down = 1 -> ((f_G_Latching_box[1]= 1 ) /\(f_G_Latching_box[2]= 2 ) /\(r_G_Latching_box[1]= 1 ) /\(r_G_Latching_box[2]= 2 ) /\(l_G_Latching_box[1]= 1 ) /\(l_G_Latching_box[2]= 2 ) /\(OUT_G_cylinders=2 ));
constraint inactive_D_cylinders = 1 -> ((random=1 ));
constraint D_cylinders_high = 1 -> ((f_D_Latching_box[1]= 2 ) /\(f_D_Latching_box[2]= 2 ) /\(r_D_Latching_box[1]= 2 ) /\(r_D_Latching_box[2]= 2 ) /\(l_D_Latching_box[1]= 2 ) /\(l_D_Latching_box[2]= 2 ) /\(OUT_D_cylinders=1 ));
constraint D_cylinders_down = 1 -> ((OUT_D_cylinders=2 ));
constraint failure_cylinder = 1 -> ((OUT_anomaly[1]=1 /\ OUT_anomaly[2]=1 ));
constraint nn_pressurized_general_EV = 1 -> ((OUT_Hout[1] = 0 ));
constraint pressurized_general_EV = 1 -> ((OUT_Hout[1] = OUT_Hin[1] ) /\(Circuit_pressuried_Sensor[1]=2 ) /\(Circuit_pressuried_Sensor[2]=2 ) /\(Circuit_pressuried_Sensor[3]=2 ) /\(((IN_Hout [5]=0 /\ IN_extend_EV [ 1 ]=0 /\ IN_extend_EV [ 2 ]=0 ) /\ (IN_f_gearPosition_Sensor [1] = 1 /\ IN_Handle_Sensor[1]=1) /\ (IN_f_gearPosition_Sensor [1] = 1 /\ IN_Handle_Sensor[1]=1)) -> OUT_open_EV [1]=1 /\ OUT_open_EV [2]=1 ) /\(((IN_Hout [4]=0 /\ IN_retract_EV [ 1 ]=0 /\ IN_retract_EV [ 2 ]=0 ) /\ (IN_f_gearPosition_Sensor [1] = 2 /\ IN_Handle_Sensor[1]=2) /\ (IN_f_gearPosition_Sensor [1] = 2 /\ IN_Handle_Sensor[1]=2)) -> OUT_open_EV [1]=1 /\ OUT_open_EV [2]=1 ));
constraint nn_pressurized_close_EV = 1 -> ((OUT_Hout[2] = 0 ));
constraint pressurized_close_EV = 1 -> ((OUT_Hout[2] = OUT_Hin[2] ));
constraint nn_pressurized_open_EV = 1 -> ((OUT_Hout[3] = 0 ));
constraint pressurized_open_EV = 1 -> ((OUT_Hout[3] = OUT_Hin[3] ));
constraint nn_pressurized_retract_EV = 1 -> ((OUT_Hout[4] = 0 ));
constraint pressurized_retract_EV = 1 -> ((OUT_Hout[4] = OUT_Hin[4] ));
constraint nn_pressurized_extend_EV = 1 -> ((OUT_Hout[5] = 0 ));
constraint pressurized_extend_EV = 1 -> ((OUT_Hout[5] = OUT_Hin[5] ));
constraint failure_EV = 1 -> ((OUT_anomaly[1]=1 /\ OUT_anomaly[2]=1 ));
constraint Analog_switch_closed = 1 -> ((OUT_General_EV[1] =1 ) /\(OUT_General_EV[2] =1 ) /\(Analog_switch_Sensor [1] = 2 ) /\(Analog_switch_Sensor [2] = 2 ) /\(Analog_switch_Sensor [3] = 2 ) /\(OUT_Time_to_close_switch=1 ));
constraint Analog_switch_open = 1 -> ((Analog_switch_Sensor [1] = 1 ) /\(Analog_switch_Sensor [2] = 1 ) /\(Analog_switch_Sensor [3] = 1 ) /\((IN_Handle_Sensor [ 1 ]>0 /\ IN_Handle_Sensor [ 2 ]>0 /\ IN_Handle_Sensor [ 3 ]>0) -> OUT_Time_to_close_switch=1 ) /\(((IN_Handle>0) /\ IN_Time_to_close_switch=1) -> (OUT_General_EV[1] =1 /\ OUT_General_EV[2] =1) ));
constraint failure_analog_switch = 1 -> ((OUT_anomaly[1]=1 /\ OUT_anomaly[2]=1 ));
constraint general_Analog = 1 -> ((Analog_Controller=1 ));


%Constraints---------------------------------------------------
	%on the hierarchy

constraint LGS_Nominal = 1 <-> general_Nominal_cl = 1;
constraint general_Nominal_cl = general_Nominal ;
constraint LGS_Nominal = 1 <-> handle = 1;
constraint handle = handle_up + handle_down + handle_inactive  ;
constraint LGS_Nominal = 1 <-> gears_cl = 1;
constraint gears_cl = retracted + extended + failure_gear  ;
constraint LGS_Nominal = 1 <-> doors_cl = 1;
constraint doors_cl = Opened + Closed + failure_doors  ;
constraint LGS_Nominal = 1 <-> cynlinders_cl = 1;
constraint cynlinders_cl = cylinder_states + failure_cylinder  ;
constraint cylinder_states = 1 <-> gear_cylinder_cl = 1;
constraint gear_cylinder_cl = inactive_G_cylinders + G_cylinders_high + G_cylinders_down  ;
constraint cylinder_states = 1 <-> door_cylinder_cl = 1;
constraint door_cylinder_cl = inactive_D_cylinders + D_cylinders_high + D_cylinders_down  ;
constraint gear_cylinder_cl + door_cylinder_cl  =  cylinder_states  * ( gear_cylinder_cl + door_cylinder_cl  );
constraint LGS_Nominal = 1 <-> electro_valves_cl = 1;
constraint electro_valves_cl = electro_valves_states + failure_EV  ;
constraint electro_valves_states = 1 <-> general_EV_cl = 1;
constraint general_EV_cl = nn_pressurized_general_EV + pressurized_general_EV  ;
constraint electro_valves_states = 1 <-> close_EV_cl = 1;
constraint close_EV_cl = nn_pressurized_close_EV + pressurized_close_EV  ;
constraint electro_valves_states = 1 <-> open_EV_cl = 1;
constraint open_EV_cl = nn_pressurized_open_EV + pressurized_open_EV  ;
constraint electro_valves_states = 1 <-> retract_EV_cl = 1;
constraint retract_EV_cl = nn_pressurized_retract_EV + pressurized_retract_EV  ;
constraint electro_valves_states = 1 <-> extend_EV_cl = 1;
constraint extend_EV_cl = nn_pressurized_extend_EV + pressurized_extend_EV  ;
constraint general_EV_cl + close_EV_cl + open_EV_cl + retract_EV_cl + extend_EV_cl  =  electro_valves_states  * ( general_EV_cl + close_EV_cl + open_EV_cl + retract_EV_cl + extend_EV_cl  );
constraint LGS_Nominal = 1 <-> Analog_switch_cl = 1;
constraint Analog_switch_cl = Analog_switch_closed + Analog_switch_open + failure_analog_switch  ;
constraint general_Nominal_cl + handle + gears_cl + doors_cl + cynlinders_cl + electro_valves_cl + Analog_switch_cl  =  LGS_Nominal  * ( general_Nominal_cl + handle + gears_cl + doors_cl + cynlinders_cl + electro_valves_cl + Analog_switch_cl  );
constraint LGS_Analog = 1 <-> general_Alanlog_cl = 1;
constraint general_Alanlog_cl = general_Analog ;
constraint general_Alanlog_cl =  LGS_Analog  * ( general_Alanlog_cl );
	%on full transitions

constraint ((IN_Handle=1) /\ (LGS_Nominal=1 )) -> handle_up = 1;
constraint ((IN_Handle=2) /\ (LGS_Nominal=1 )) -> handle_down = 1;
constraint ((IN_Handle=0) /\ (LGS_Nominal=1 )) -> handle_inactive = 1;
constraint ((IN_Handle=0) /\ (LGS_Nominal=1 )) -> handle_inactive = 1;
constraint ((IN_G_cylinders=1) /\ (LGS_Nominal=1 )) -> retracted = 1;
constraint ((IN_G_cylinders=2) /\ (LGS_Nominal=1 )) -> extended = 1;
constraint ((IN_D_cylinders=1) /\ (LGS_Nominal=1 )) -> Closed = 1;
constraint ((IN_D_cylinders=2) /\ (LGS_Nominal=1 )) -> Opened = 1;
constraint (((Cy_Time_to_down<Cy_Time_to_down_limit)) /\ (LGS_Nominal=1 )) -> cylinder_states = 1;
constraint (((Cy_Time_to_down>Cy_Time_to_down_limit)) /\ (LGS_Nominal=1 )) -> failure_cylinder = 1;
constraint (((IN_Hout[4] = 0 /\ IN_Hout[5] = 0)) /\ (cylinder_states=1 )) -> inactive_G_cylinders = 1;
constraint (((IN_Hout[4] = 0 /\ IN_Hout[5] = 0)) /\ (cylinder_states=1 )) -> inactive_G_cylinders = 1;
constraint (((IN_Hout[2] = 0 /\ IN_Hout[3] = 0)) /\ (cylinder_states=1 )) -> inactive_D_cylinders = 1;
constraint (((IN_Hout[2] = 0 /\ IN_Hout[3] = 0)) /\ (cylinder_states=1 )) -> inactive_D_cylinders = 1;
constraint ((IN_Hout[4] = IN_Hin[4]) /\ (cylinder_states=1 )) -> G_cylinders_high = 1;
constraint ((IN_Hout[5] = IN_Hin[5]) /\ (cylinder_states=1 )) -> G_cylinders_down = 1;
constraint ((IN_Hout[2] = IN_Hin[2]) /\ (cylinder_states=1 )) -> D_cylinders_high = 1;
constraint ((IN_Hout[3] = IN_Hin[3]) /\ (cylinder_states=1 )) -> D_cylinders_down = 1;
constraint ((IN_Hout[4] = IN_Hin[4]) /\ (cylinder_states=1 )) -> G_cylinders_high = 1;
constraint ((IN_Hout[5] = IN_Hin[5]) /\ (cylinder_states=1 )) -> G_cylinders_down = 1;
constraint ((IN_Hout[2] = IN_Hin[2]) /\ (cylinder_states=1 )) -> D_cylinders_high = 1;
constraint ((IN_Hout[3] = IN_Hin[3]) /\ (cylinder_states=1 )) -> D_cylinders_down = 1;
constraint ((((EV_Time_to_open<EV_Time_to_open_limit) /\ (EV_Time_to_close<EV_Time_to_close_limit))) /\ (LGS_Nominal=1 )) -> electro_valves_states = 1;
constraint ((((EV_Time_to_open>EV_Time_to_open_limit) \/ (EV_Time_to_close>EV_Time_to_close_limit))) /\ (LGS_Nominal=1 )) -> failure_EV = 1;
constraint (((IN_General_EV[1] =0 \/ IN_General_EV[2] =0)) /\ (electro_valves_states=1 )) -> nn_pressurized_general_EV = 1;
constraint (((IN_open_EV[1] =0 \/ IN_open_EV[2] =0)) /\ (electro_valves_states=1 )) -> nn_pressurized_open_EV = 1;
constraint (((IN_close_EV[1] =0 \/ IN_close_EV[2] =0)) /\ (electro_valves_states=1 )) -> nn_pressurized_close_EV = 1;
constraint (((IN_retract_EV[1] =0 \/ IN_retract_EV[2] =0)) /\ (electro_valves_states=1 )) -> nn_pressurized_retract_EV = 1;
constraint (((IN_extend_EV[1] =0 \/ IN_extend_EV[2] =0)) /\ (electro_valves_states=1 )) -> nn_pressurized_extend_EV = 1;
constraint (((IN_General_EV[1] =1 \/ IN_General_EV[2] =1)) /\ (electro_valves_states=1 )) -> pressurized_general_EV = 1;
constraint (((IN_open_EV[1] =1 \/ IN_open_EV[2] =1)) /\ (electro_valves_states=1 )) -> pressurized_open_EV = 1;
constraint (((IN_close_EV[1] =1 \/ IN_close_EV[2] =1)) /\ (electro_valves_states=1 )) -> pressurized_close_EV = 1;
constraint (((IN_retract_EV[1] =1 \/ IN_retract_EV[2] =1)) /\ (electro_valves_states=1 )) -> pressurized_retract_EV = 1;
constraint (((IN_extend_EV[1] =1 \/ IN_extend_EV[2] =1)) /\ (electro_valves_states=1 )) -> pressurized_extend_EV = 1;
constraint (((IN_Time_to_close_switch=0 /\ ((IN_Handle_Sensor [ 1 ]=1 /\ IN_Handle_Sensor [ 2 ]=1 /\ IN_Handle_Sensor [ 3 ]=1) \/ (IN_Handle_Sensor [ 1 ]=2 /\ IN_Handle_Sensor [ 2 ]=2 /\ IN_Handle_Sensor [ 3 ]=2)))) /\ (LGS_Nominal=1 )) -> Analog_switch_closed = 1;
constraint (((IN_Time_to_close_switch=1 \/ (IN_Handle_Sensor [ 1 ]=0 /\ IN_Handle_Sensor [ 2 ]=0 /\ IN_Handle_Sensor [ 3 ]=0))) /\ (LGS_Nominal=1 )) -> Analog_switch_open = 1;
constraint (((AS_Time_to_close > AS_Time_to_close_limit)) /\ (LGS_Nominal=1 )) -> failure_analog_switch = 1;
constraint (((AS_Time_to_open > AS_Time_to_open_limit)) /\ (LGS_Nominal=1 )) -> failure_analog_switch = 1;
constraint (((IN_anomaly[1]=1 \/ IN_anomaly[2]=1))) -> LGS_Analog = 1;

	%on start transitions
constraint LGS_Nominal =1; 
constraint LGS_Nominal = 1 -> (handle_up =1 \/ handle_up+handle_down+handle_inactive= 1);
constraint LGS_Analog = 1 -> (general_Analog =1 );
constraint LGS_Nominal = 1 -> (retracted =1 \/ retracted+extended+failure_gear= 1);
constraint LGS_Nominal = 1 -> (Closed =1 \/ Opened+Closed+failure_doors= 1);
constraint cylinder_states = 1 -> (G_cylinders_high =1 \/ inactive_G_cylinders+G_cylinders_high+G_cylinders_down= 1);
constraint cylinder_states = 1 -> (D_cylinders_high =1 \/ inactive_D_cylinders+D_cylinders_high+D_cylinders_down= 1);
constraint electro_valves_states = 1 -> (pressurized_close_EV =1 \/ nn_pressurized_close_EV+pressurized_close_EV= 1);
constraint electro_valves_states = 1 -> (nn_pressurized_extend_EV =1 \/ nn_pressurized_extend_EV+pressurized_extend_EV= 1);
constraint electro_valves_states = 1 -> (nn_pressurized_general_EV =1 \/ nn_pressurized_general_EV+pressurized_general_EV= 1);
constraint electro_valves_states = 1 -> (nn_pressurized_open_EV =1 \/ nn_pressurized_open_EV+pressurized_open_EV= 1);
constraint electro_valves_states = 1 -> (pressurized_retract_EV =1 \/ nn_pressurized_retract_EV+pressurized_retract_EV= 1);
constraint LGS_Nominal = 1 -> (Analog_switch_open =1 \/ Analog_switch_closed+Analog_switch_open+failure_analog_switch= 1);
constraint LGS_Nominal = 1 -> (cylinder_states =1 \/ cylinder_states+failure_cylinder= 1);

solve maximize Flex;
