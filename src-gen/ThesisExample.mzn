include "globals.mzn";

%Declaration of variables
var 0..1:Fleet;
var 0..1:Actuator;
array[1..9] of var 0..1:Sprinkler;
array[1..9] of var 0..1:Memory;
array[1..9] of var {0, 45, 90, 180, 240, 360}:Rotation;
array[1..9] of var 0..1:Head;
array[1..9] of var 0..60:PressureSp;
array[1..9] of var 0..1:Rotor;
array[1..9] of var 0..1:Spray;
var 0..1:CenterPivor;
var {0, 114,232}:EmitterCP;
var 0..60:PressureCP;
var 0..1:SprinklerCP;
var 0..1:Dripline;
var {0, 114,232}:Emitter;
var 0..60:PressureDr;
var 0..1:Humidifier;
var 0..1:Rooftop;
var 0..1:Position;
0..1:IN_open;
0..1:IN_close;
var 0..1:OUT_open;
var 0..1:OUT_close;
var 0..1:Partial;
var 0..1:Roof;
var 0..1:Shader;
var 0..1:Glass;
array[1..5] of var 0..1:LightBulb;
var 0..1:MistDispenser;
var 0..1:MistTemp;
var 0..1:PressureMD;
var 0..1:Nozzle;
array[1..4] of var 0..1:AirConditionner;
array[1..4] of var 0..3:AirMode;
array[1..4] of var 0..30:Temp;
array[1..4] of var 0..3:Speed;
var 0..1:Sensor;
var 0..1:RainSensor;
var {0, 10}:TimeSpan;
var 0..1:TempSensor;
var 0..1:LightSensor;
array[1..7] of var 0..1:HumiditySensor;
array[1..7] of var 0..1:Notifier;
array[1..7] of var 0..1:Alarm;
array[1..7] of var 0..1:Contact;
array[1..7] of var 0..1:Bulb;
array[1..7] of var 0..1:Mode;
array[1..7] of var 0..1:Master;
array[1..7] of var 0..1:Slave;
array[1..7] of var 0..1:HumidityType;
array[1..7] of var 0..1:Air;
array[1..7] of var 0..1:Soil;
var 0..1:SmartMeter;
var 0..1:WaterSupplier;
var 0..1:TreasholdAlam;
var 0..1:Source;
var 0..1:Fertilizer;
var 0..1:Pump;
var 0..1:RainWater;
var 0..1:Mainswater;
var 0..1:Communication;
var 0..1:Wifi;
var 0..1:Zigbee;
var 0..1:Router;
var 0..1:Coordinator;
var 0..1:Topology;
var 0..1:Distributed;
var 0..1:Star;
array[1..7] of float:BatteryLevel;
int:Temperature;
float:Brightness;
float:minBrightness;
float:opBrightness;
float:TankLevel;
float:MinTankWater;
float:OpTankWater;
float:WaterConsumption;
0..1:Rain;
float:EConsumption;
float:OpConsumption;
0..1:PowerFailure;
int:Month;
float:HumidityLevel;
float:NormalHumidity;

%Flexing constraints from imported models
var int: Flex;
var 0..1: Flex1;
constraint Flex1 = 1 <-> (Fleet=Communication);
var 0..1: Flex2;
constraint Flex2 = 1 <-> (Fleet=Actuator);
var 0..1: Flex3;
constraint Flex3 = 1 <-> (Fleet=Sensor);
var 0..1: Flex4;
constraint Flex4 = 1 <-> (Fleet=WaterSupplier);
var 0..1: Flex5;
constraint Flex5 = 1 <-> (Communication=Zigbee);
var 0..1: Flex6;
constraint Flex6 = 1 <-> (Communication>=Wifi);
var 0..1: Flex7;
constraint Flex7 = 1 <-> (Zigbee=Coordinator);
var 0..1: Flex8;
constraint Flex8 = 1 <-> (Zigbee>=Router);
var 0..1: Flex9;
constraint Flex9 = 1 <-> (Zigbee>=Topology);
var 0..1: Flex10;
constraint Flex10 = 1 <-> (Topology=Distributed+Star);
var 0..1: Flex11;
constraint Flex11 = 1 <-> (Actuator>=Rooftop);
var 0..1: Flex12;
constraint Flex12 = 1 <-> (Rooftop=Position);
var 0..1: Flex13;
constraint Flex13 = 1 <-> (Rooftop=Roof);
var 0..1: Flex14;
constraint Flex14 = 1 <-> (Position=OUT_open+OUT_close);
var 0..1: Flex15;
constraint Flex15 = 1 <-> (Position>=Partial);
var 0..1: Flex16;
constraint Flex16 = 1 <-> (Roof=Glass);
var 0..1: Flex17;
constraint Flex17 = 1 <-> (Roof>=Shader);
var 0..1: Flex18;
constraint Flex18 = 1 <-> (Actuator>=MistDispenser);
var 0..1: Flex19;
constraint Flex19 = 1 <-> (MistDispenser >0 -> MistTemp>0);
var 0..1: Flex20;
constraint Flex20 = 1 <-> (MistDispenser = Nozzle);
var 0..1: Flex21;
constraint Flex21 = 1 <-> (MistDispenser>0 -> PressureMD >0);
var 0..1: Flex22;
constraint Flex22 = 1 <-> (Actuator>=Humidifier);
var 0..1: Flex23;
constraint Flex23 = 1 <-> (Actuator>=LightBulb[1] /\ Actuator>=LightBulb[2] /\ Actuator>=LightBulb[3] /\ Actuator>=LightBulb[4] /\ Actuator>=LightBulb[5] /\ Actuator=1 -> ((LightBulb[1]+ LightBulb[2]+ LightBulb[3]+ LightBulb[4]+ LightBulb[5])>0 /\ (LightBulb[1]+ LightBulb[2]+ LightBulb[3]+ LightBulb[4]+ LightBulb[5])<5));
var 0..1: Flex24;
constraint Flex24 = 1 <-> (AirConditionner[1]>0 -> AirMode[1]>0 /\ AirConditionner[1]>0 -> Speed[1]>0 /\ AirConditionner[1]>0 -> Temp[1]>0);
var 0..1: Flex25;
constraint Flex25 = 1 <-> (AirConditionner[2]>0 -> AirMode[2]>0 /\ AirConditionner[2]>0 -> Speed[2]>0 /\ AirConditionner[2]>0 -> Temp[2]>0);
var 0..1: Flex26;
constraint Flex26 = 1 <-> (AirConditionner[3]>0 -> AirMode[3]>0 /\ AirConditionner[3]>0 -> Speed[3]>0 /\ AirConditionner[3]>0 -> Temp[3]>0);
var 0..1: Flex27;
constraint Flex27 = 1 <-> (AirConditionner[4]>0 -> AirMode[4]>0 /\ AirConditionner[4]>0 -> Speed[4]>0 /\ AirConditionner[4]>0 -> Temp[4]>0);
var 0..1: Flex28;
constraint Flex28 = 1 <-> (Actuator>=0 -> (Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9])*CenterPivor= 0 /\ (Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9])*Dripline=0 /\ (Dripline*CenterPivor=0) /\ (Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9] + Dripline + CenterPivor >0));
var 0..1: Flex29;
constraint Flex29 = 1 <-> (Sprinkler[1]>0 -> Memory[1]>0 /\ Sprinkler[1]>0 -> Rotation[1]>0 /\ Sprinkler[1]>0 -> PressureSp [1]>0 /\ Sprinkler[1]>0 -> Head [1]>0);
var 0..1: Flex30;
constraint Flex30 = 1 <-> (Sprinkler[2]>0 -> Memory[2]>0 /\ Sprinkler[2]>0 -> Rotation[2]>0 /\ Sprinkler[2]>0 -> PressureSp [2]>0 /\ Sprinkler[1]>0 -> Head [2]>0);
var 0..1: Flex31;
constraint Flex31 = 1 <-> (Sprinkler[3]>0 -> Memory[3]>0 /\ Sprinkler[3]>0 -> Rotation[3]>0 /\ Sprinkler[3]>0 -> PressureSp [3]>0 /\ Sprinkler[1]>0 -> Head [3]>0);
var 0..1: Flex32;
constraint Flex32 = 1 <-> (Sprinkler[4]>0 -> Memory[4]>0 /\ Sprinkler[4]>0 -> Rotation[4]>0 /\ Sprinkler[4]>0 -> PressureSp [4]>0 /\ Sprinkler[1]>0 -> Head [4]>0);
var 0..1: Flex33;
constraint Flex33 = 1 <-> (Sprinkler[5]>0 -> Memory[5]>0 /\ Sprinkler[5]>0 -> Rotation[5]>0 /\ Sprinkler[5]>0 -> PressureSp [5]>0 /\ Sprinkler[5]>0 -> Head [5]>0);
var 0..1: Flex34;
constraint Flex34 = 1 <-> (Sprinkler[6]>0 -> Memory[6]>0 /\ Sprinkler[6]>0 -> Rotation[6]>0 /\ Sprinkler[6]>0 -> PressureSp [6]>0 /\ Sprinkler[6]>0 -> Head [6]>0);
var 0..1: Flex35;
constraint Flex35 = 1 <-> (Sprinkler[7]>0 -> Memory[7]>0 /\ Sprinkler[7]>0 -> Rotation[7]>0 /\ Sprinkler[7]>0 -> PressureSp [7]>0 /\ Sprinkler[7]>0 -> Head [7]>0);
var 0..1: Flex36;
constraint Flex36 = 1 <-> (Sprinkler[8]>0 -> Memory[8]>0 /\ Sprinkler[8]>0 -> Rotation[8]>0 /\ Sprinkler[8]>0 -> PressureSp [8]>0 /\ Sprinkler[8]>0 -> Head [8]>0);
var 0..1: Flex37;
constraint Flex37 = 1 <-> (Sprinkler[9]>0 -> Memory[9]>0 /\ Sprinkler[9]>0 -> Rotation[9]>0 /\ Sprinkler[9]>0 -> PressureSp [9]>0 /\ Sprinkler[9]>0 -> Head [9]>0);
var 0..1: Flex38;
constraint Flex38 = 1 <-> (Head[1] = Spray[1]+ Rotor[1]);
var 0..1: Flex39;
constraint Flex39 = 1 <-> (Head[2] = Spray[2]+ Rotor[2]);
var 0..1: Flex40;
constraint Flex40 = 1 <-> (Head[3] = Spray[3]+ Rotor[3]);
var 0..1: Flex41;
constraint Flex41 = 1 <-> (Head[4] = Spray[4]+ Rotor[4]);
var 0..1: Flex42;
constraint Flex42 = 1 <-> (Head[5] = Spray[5]+ Rotor[5]);
var 0..1: Flex43;
constraint Flex43 = 1 <-> (Head[6] = Spray[6]+ Rotor[6]);
var 0..1: Flex44;
constraint Flex44 = 1 <-> (Head[7] = Spray[7]+ Rotor[7]);
var 0..1: Flex45;
constraint Flex45 = 1 <-> (Head[8] = Spray[8]+ Rotor[8]);
var 0..1: Flex46;
constraint Flex46 = 1 <-> (Head[9] = Spray[9]+ Rotor[9]);
var 0..1: Flex47;
constraint Flex47 = 1 <-> (CenterPivor=SprinklerCP);
var 0..1: Flex48;
constraint Flex48 = 1 <-> (CenterPivor >0 -> EmitterCP>0);
var 0..1: Flex49;
constraint Flex49 = 1 <-> (CenterPivor >0 -> PressureCP>0);
var 0..1: Flex50;
constraint Flex50 = 1 <-> (Dripline >0 -> Emitter>0);
var 0..1: Flex51;
constraint Flex51 = 1 <-> (Dripline >0 -> PressureDr>0);
var 0..1: Flex52;
constraint Flex52 = 1 <-> (Sensor>=SmartMeter);
var 0..1: Flex53;
constraint Flex53 = 1 <-> (Sensor>=RainSensor);
var 0..1: Flex54;
constraint Flex54 = 1 <-> (RainSensor>0 -> TimeSpan>0);
var 0..1: Flex55;
constraint Flex55 = 1 <-> (Sensor>=LightSensor);
var 0..1: Flex56;
constraint Flex56 = 1 <-> (Sensor>=TempSensor);
var 0..1: Flex57;
constraint Flex57 = 1 <-> (Sensor>=SmartMeter);
var 0..1: Flex58;
constraint Flex58 = 1 <-> (Sensor>=HumiditySensor[1] /\ Sensor>=HumiditySensor[2] /\ Sensor>=HumiditySensor[3] /\ Sensor>=HumiditySensor[4] /\ Sensor>=HumiditySensor[5] /\ Sensor>=HumiditySensor[6] /\ Sensor>=HumiditySensor[7] /\ Sensor=1 -> ((HumiditySensor[1]+ HumiditySensor[2]+ HumiditySensor[3]+ HumiditySensor[4]+ HumiditySensor[5] + HumiditySensor[6]+ HumiditySensor[7]>=1) /\ (HumiditySensor[1]+ HumiditySensor[2]+ HumiditySensor[3]+ HumiditySensor[4]+ HumiditySensor[5] + HumiditySensor[6]+ HumiditySensor[7]<=7)));
var 0..1: Flex59;
constraint Flex59 = 1 <-> (HumiditySensor[1] >= Notifier[1] /\ HumiditySensor[1] = Mode[1] /\ HumiditySensor[1]= HumidityType[1] /\ HumidityType[1] = Soil[1] /\ HumidityType[1] >= Air[1] /\ Notifier[1] * 3 >= Alarm[1] + Contact[1] + Bulb[1] /\ Mode[1]= Slave[1] + Master[1]);
var 0..1: Flex60;
constraint Flex60 = 1 <-> (HumiditySensor[2] >= Notifier[2] /\ HumiditySensor[2] = Mode[2] /\ HumiditySensor[2]= HumidityType[2] /\ HumidityType[2] = Soil[2] /\ HumidityType[2] >= Air[2] /\ Notifier[2] * 3 >= Alarm[2] + Contact[2] + Bulb[2] /\ Mode[2]= Slave[2] + Master[2]);
var 0..1: Flex61;
constraint Flex61 = 1 <-> (HumiditySensor[3] >= Notifier[3] /\ HumiditySensor[3] = Mode[3] /\ HumiditySensor[3]= HumidityType[3] /\ HumidityType[3] = Soil[3] /\ HumidityType[3] >= Air[3] /\ Notifier[3] * 3 >= Alarm[3] + Contact[3] + Bulb[3] /\ Mode[3]= Slave[3] + Master[3]);
var 0..1: Flex62;
constraint Flex62 = 1 <-> (HumiditySensor[4] >= Notifier[4] /\ HumiditySensor[4] = Mode[4] /\ HumiditySensor[4]= HumidityType[4] /\ HumidityType[4] = Soil[4] /\ HumidityType[4] >= Air[4] /\ Notifier[4] * 3 >= Alarm[4] + Contact[4] + Bulb[4] /\ Mode[4]= Slave[4] + Master[4]);
var 0..1: Flex63;
constraint Flex63 = 1 <-> (HumiditySensor[5] >= Notifier[5] /\ HumiditySensor[5] = Mode[5] /\ HumiditySensor[5]= HumidityType[5] /\ HumidityType[5] = Soil[5] /\ HumidityType[5] >= Air[5] /\ Notifier[5] * 3 >= Alarm[5] + Contact[5] + Bulb[5] /\ Mode[5]= Slave[5] + Master[5]);
var 0..1: Flex64;
constraint Flex64 = 1 <-> (HumiditySensor[6] >= Notifier[6] /\ HumiditySensor[6] = Mode[6] /\ HumiditySensor[6]= HumidityType[6] /\ HumidityType[6] = Soil[6] /\ HumidityType[6] >= Air[6] /\ Notifier[6] * 3 >= Alarm[6] + Contact[6] + Bulb[6] /\ Mode[6]= Slave[6] + Master[6]);
var 0..1: Flex65;
constraint Flex65 = 1 <-> (HumiditySensor[7] >= Notifier[7] /\ HumiditySensor[7] = Mode[7] /\ HumiditySensor[7]= HumidityType[7] /\ HumidityType[7] = Soil[7] /\ HumidityType[7] >= Air[7] /\ Notifier[7] * 3 >= Alarm[7] + Contact[7] + Bulb[7] /\ Mode[7]= Slave[7] + Master[7]);
var 0..1: Flex66;
constraint Flex66 = 1 <-> (WaterSupplier>=TreasholdAlam);
var 0..1: Flex67;
constraint Flex67 = 1 <-> (WaterSupplier>=Fertilizer);
var 0..1: Flex68;
constraint Flex68 = 1 <-> (WaterSupplier>=Pump);
var 0..1: Flex69;
constraint Flex69 = 1 <-> (WaterSupplier=Source);
var 0..1: Flex70;
constraint Flex70 = 1 <-> (Source=RainWater+Mainswater);
var 0..1: Flex71;
constraint Flex71 = 1 <-> (RainWater>0 -> Pump>0);
var 0..1: Flex72;
constraint Flex72 = 1 <-> (RainWater>0 -> TreasholdAlam>0);
var 0..1: Flex73;
constraint Flex73 = 1 <-> (Mainswater>0 -> SmartMeter>0);
var 0..1: Flex74;
constraint Flex74 = 1 <-> (Humidifier>0 -> (Air[1]+Air[2]+Air[3]+Air[4]+Air[5]+Air[6]+Air[7]>0));
var 0..1: Flex75;
constraint Flex75 = 1 <-> (OUT_open * (LightBulb[1]+ LightBulb[2]+ LightBulb[3]+ LightBulb[4]+ LightBulb[5]) =0);
Flex = Flex1+Flex2+Flex3+Flex4+Flex5+Flex6+Flex7+Flex8+Flex9+Flex10+Flex11+Flex12+Flex13+Flex14+Flex15+Flex16+Flex17+Flex18+Flex19+Flex20+Flex21+Flex22+Flex23+Flex24+Flex25+Flex26+Flex27+Flex28+Flex29+Flex30+Flex31+Flex32+Flex33+Flex34+Flex35+Flex36+Flex37+Flex38+Flex39+Flex40+Flex41+Flex42+Flex43+Flex44+Flex45+Flex46+Flex47+Flex48+Flex49+Flex50+Flex51+Flex52+Flex53+Flex54+Flex55+Flex56+Flex57+Flex58+Flex59+Flex60+Flex61+Flex62+Flex63+Flex64+Flex65+Flex66+Flex67+Flex68+Flex69+Flex70+Flex71+Flex72+Flex73+Flex74+Flex75;

constraint AW=1;
%Declaration of composite states and their Hierarchy
var 0..1:AW;
var 0..1:global_AW;
var 0..1:global_AW_state;
var 0..1:irrigation_AW;
var 0..1:automatic_AW;
var 0..1:automatic_CL_AW;
var 0..1:rapidIrrigation_AW;
var 0..1:slowIrrigation_AW;
var 0..1:Natural_Irrigation_AW_state;
var 0..1:heating_AW;
var 0..1:normal_heating_AW_state;
var 0..1:high_heating_AW_state;
var 0..1:open_air_AW_state;
var 0..1:extra_heating_AW_state;
var 0..1:moitSensing_AW;
var 0..1:acurate_moist_AW_state;
var 0..1:efficient_moit_AW_state;
var 0..1:brightneAW_AW;
var 0..1:natural_brightness_AW_state;
var 0..1:automatic_brightness_AW_state;
var 0..1:waterSource_AW;
var 0..1:efficientWater_AW_state;
var 0..1:durableWater_AW_state;
var 0..1:SS;
var 0..1:global_SS;
var 0..1:global_SS_state;
var 0..1:irrigation_SS;
var 0..1:automatic_SS;
var 0..1:automatic_CL_SS;
var 0..1:rapidAcc_Irrigation_SS;
var 0..1:rapidEff_Irrigation_SS;
var 0..1:slowIrrigation_SS;
var 0..1:Natural_Irrigation_SS_state;
var 0..1:heating_SS;
var 0..1:natural_cooling_SS_state;
var 0..1:automatic_cooling_SS_state;
var 0..1:moitSensing_SS;
var 0..1:acurate_moist_SS_state;
var 0..1:efficient_moit_SS_state;
var 0..1:brightness_SS;
var 0..1:natural_brightness_SS_state;
var 0..1:automatic_brightness_SS_state;
var 0..1:waterSource_SS;
var 0..1:efficientWater_SS_state;
var 0..1:durableWater_SS_state;
var 0..1:NoE;
var 0..1:global_NoE;
var 0..1:global_NoE_state;
var 0..1:irrigation_NoE;
var 0..1:Natural_Irrigation_NoE_state;
var 0..1:heating_NoE;
var 0..1:natural_heating_NoE_state;
var 0..1:automatic_heating_NoE_state;
var 0..1:moitSensing_NoE;
var 0..1:survival_moist_NoE_state;

constraint global_AW_state = 1 -> ((CenterPivor=0 ) /\(Humidifier=0 ) /\(MistDispenser=0 ) /\(Fertilizer=0 ) /\(Air[1]+Air[2]+Air[3]+Air[4]+Air[5]+Air[6]+Air[7]=0 ) /\(Router=0 ) /\(Distributed=0 ) /\(Shader=0 ) /\(Actuator>0 -> (((Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9])*Dripline =0) /\ (Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9] + Dripline >= 0) /\ ((Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9]>=0 /\ Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9]<=4) \/ Dripline=1)) ) /\(Actuator>0 -> (AirConditionner[1]+AirConditionner[2]+AirConditionner[3]+AirConditionner[4]>=0 /\ AirConditionner[1]+AirConditionner[2]+AirConditionner[3]+AirConditionner[4] <= 4) ) /\(Actuator>0 -> (LightBulb[1]+ LightBulb[2]+ LightBulb[3]+ LightBulb[4]+ LightBulb[5] >=0 /\ LightBulb[1]+ LightBulb[2]+ LightBulb[3]+ LightBulb[4]+ LightBulb[5] <=5) ) /\(HumiditySensor[1] >= Notifier[1] /\ HumiditySensor[1] = Mode[1] /\ HumiditySensor[1]= HumidityType[1] /\ HumidityType[1] = Soil[1] /\ HumidityType[1] >= Air[1] /\ ((Notifier[1]>0) -> (Alarm[1] + Contact[1] + Bulb[1]<=3)) /\ Mode[1]= Slave[1] + Master[1] ) /\(HumiditySensor[2] >= Notifier[2] /\ HumiditySensor[2] = Mode[2] /\ HumiditySensor[2]= HumidityType[2] /\ HumidityType[2] = Soil[2] /\ HumidityType[2] >= Air[2] /\ ((Notifier[2]>0) -> (Alarm[2] + Contact[2] + Bulb[2]<=3)) /\ Mode[2]= Slave[2] + Master[2] ) /\(HumiditySensor[3] >= Notifier[3] /\ HumiditySensor[3] = Mode[3] /\ HumiditySensor[3]= HumidityType[3] /\ HumidityType[3] = Soil[3] /\ HumidityType[3] >= Air[3] /\ ((Notifier[3]>0) -> (Alarm[3] + Contact[3] + Bulb[3]<=3)) /\ Mode[3]= Slave[3] + Master[3] ) /\(HumiditySensor[4] >= Notifier[4] /\ HumiditySensor[4] = Mode[4] /\ HumiditySensor[4]= HumidityType[4] /\ HumidityType[4] = Soil[4] /\ HumidityType[4] >= Air[4] /\ ((Notifier[4]>0) -> (Alarm[4] + Contact[4] + Bulb[4]<=3)) /\ Mode[4]= Slave[4] + Master[4] ) /\(HumiditySensor[5] >= Notifier[5] /\ HumiditySensor[5] = Mode[5] /\ HumiditySensor[5]= HumidityType[5] /\ HumidityType[5] = Soil[5] /\ HumidityType[5] >= Air[5] /\ ((Notifier[5]>0) -> (Alarm[5] + Contact[5] + Bulb[5]<=3)) /\ Mode[5]= Slave[5] + Master[5] ) /\(HumiditySensor[6] >= Notifier[6] /\ HumiditySensor[6] = Mode[6] /\ HumiditySensor[6]= HumidityType[6] /\ HumidityType[6] = Soil[6] /\ HumidityType[6] >= Air[6] /\ ((Notifier[6]>0) -> (Alarm[6] + Contact[6] + Bulb[6]<=3)) /\ Mode[6]= Slave[6] + Master[6] ) /\(HumiditySensor[7] >= Notifier[7] /\ HumiditySensor[7] = Mode[7] /\ HumiditySensor[7]= HumidityType[7] /\ HumidityType[7] = Soil[7] /\ HumidityType[7] >= Air[7] /\ ((Notifier[7]>0) -> (Alarm[7] + Contact[7] + Bulb[7]<=3)) /\ Mode[7]= Slave[7] + Master[7] ) /\(HumiditySensor[7] >= Notifier[7] /\ HumiditySensor[7] = Mode[7] /\ HumiditySensor[7]= HumidityType[7] /\ HumidityType[7] = Soil[7] /\ HumidityType[7] >= Air[7] /\ Notifier[7] * 7 >= Alarm[7] + Contact[7] + Bulb[7] /\ Mode[7]= Slave[7] + Master[7] ) /\(Master[1]+Master[2]+Master[3]+Master[4]+Master[5]+Master[6]+Master[7]>=1 \/ Master[1]+Master[2]+Master[3]+Master[4]+Master[5]+Master[6]+Master[7]<=3 ) /\(Sensor=LightSensor ) /\(Sensor=TempSensor ) /\(Sensor>=RainSensor ) /\(Sensor>=SmartMeter ) /\(Head[1]>0 -> Spray[1]>0 ) /\(Head[2]>0 -> Spray[2]>0 ) /\(Head[3]>0 -> Spray[3]>0 ) /\(Head[4]>0 -> Spray[4]>0 ) /\(Head[5]>0 -> Spray[5]>0 ) /\(Head[6]>0 -> Spray[6]>0 ) /\(Head[7]>0 -> Spray[7]>0 ) /\(Head[8]>0 -> Spray[8]>0 ) /\(Head[9]>0 -> Spray[9]>0 ));
constraint rapidIrrigation_AW = 1 -> (((Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9])=4 ) /\(Sprinkler[1]+Sprinkler[3]+Sprinkler[7]+Sprinkler[9] =4 ) /\(Rotation[1]=240 ) /\(Rotation[3]=240 ) /\(Rotation[7]=240 ) /\(Rotation[9]=240 ) /\(PressureSp[1]=30 ) /\(PressureSp[3]=30 ) /\(PressureSp[7]=30 ) /\(PressureSp[9]=30 ));
constraint slowIrrigation_AW = 1 -> ((Dripline=1 ) /\(Emitter=114 ));
constraint Natural_Irrigation_AW_state = 1 -> ((Dripline=0 ) /\((Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9])=0 ) /\(OUT_open=1 ));
constraint normal_heating_AW_state = 1 -> ((LightBulb[1]=1 /\ LightBulb[3]=1 /\ LightBulb[5]=1 ) /\(LightBulb[1]+LightBulb[2]+LightBulb[3]+LightBulb[4]+LightBulb[5]=3 ));
constraint high_heating_AW_state = 1 -> ((LightBulb[1]+LightBulb[2]+LightBulb[3]+LightBulb[4]+LightBulb[5]=5 ));
constraint open_air_AW_state = 1 -> ((AirConditionner[1]+AirConditionner[2]+AirConditionner[3]+AirConditionner[4]=4 ) /\(Temp[1]=30 /\ Temp[2]=30 /\ Temp[3]=30 /\ Temp[4]=30 ) /\(Speed[1]=3 /\ Speed[2]=3 /\ Speed[3]=3 /\ Speed[4]=3 ) /\(AirMode[1]=3 /\ AirMode[2]=3 /\AirMode[3]=3 /\AirMode[4]=3 ));
constraint extra_heating_AW_state = 1 -> ((AirConditionner[1]+AirConditionner[2]+AirConditionner[3]+AirConditionner[4]=2 ) /\(AirConditionner[1]+AirConditionner[3]=2 ) /\(Temp[1]=30 /\ Temp[3]=30 ) /\(Speed[1]=2 /\ Speed[3]=2 ) /\(AirMode[1]=3 /\ AirMode[3]=3 ));
constraint acurate_moist_AW_state = 1 -> ((Master[1]+Master[2]+Master[3]+Master[4]+Master[5]+Master[6]+Master[7]=3 ));
constraint efficient_moit_AW_state = 1 -> ((Master[1]+Master[2]+Master[3]+Master[4]+Master[5]+Master[6]+Master[7]=1 ) /\(BatteryLevel[1]<=40 -> Master[1]=0 ) /\(BatteryLevel[2]<=40 -> Master[2]=0 ) /\(BatteryLevel[3]<=40 -> Master[3]=0 ) /\(BatteryLevel[4]<=40 -> Master[4]=0 ) /\(BatteryLevel[5]<=40 -> Master[5]=0 ) /\(BatteryLevel[6]<=40 -> Master[6]=0 ) /\(BatteryLevel[7]<=40 -> Master[7]=0 ));
constraint natural_brightness_AW_state = 1 -> ((OUT_open =1 ));
constraint automatic_brightness_AW_state = 1 -> ((OUT_close =1 ) /\(LightBulb[1]+LightBulb[2]+LightBulb[3]+LightBulb[4]+LightBulb[5]>0 ));
constraint efficientWater_AW_state = 1 -> ((RainWater =1 ));
constraint durableWater_AW_state = 1 -> ((Mainswater =1 ));
constraint global_SS_state = 1 -> ((CenterPivor=0 ) /\(Humidifier=0 ) /\(MistDispenser=0 ) /\(Fertilizer=0 ) /\(Air[1]+Air[2]+Air[3]+Air[4]+Air[5]+Air[6]+Air[7]=0 ) /\(Router=0 ) /\(Distributed=0 ) /\(Shader=0 ) /\(Actuator>0 -> ((Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9])*Dripline =0) /\ (Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9] + Dripline >= 0) /\ ((Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9]>=0 /\ Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9]<=9) \/ Dripline=1) ) /\(Actuator>0 -> (AirConditionner[1]+AirConditionner[2]+AirConditionner[3]+AirConditionner[4]>=0 /\ AirConditionner[1]+AirConditionner[2]+AirConditionner[3]+AirConditionner[4] <= 4) ) /\(Actuator>0 -> (LightBulb[1]+ LightBulb[2]+ LightBulb[3]+ LightBulb[4]+ LightBulb[5] >=0 /\ LightBulb[1]+ LightBulb[2]+ LightBulb[3]+ LightBulb[4]+ LightBulb[5] <=3) ) /\(HumiditySensor[1] >= Notifier[1] /\ HumiditySensor[1] = Mode[1] /\ HumiditySensor[1]= HumidityType[1] /\ HumidityType[1] = Soil[1] /\ HumidityType[1] >= Air[1] /\ ((Notifier[1]>0) -> (Alarm[1] + Bulb[1]<=2 /\ Contact[1]>0) ) /\ Mode[1]= Slave[1] + Master[1] ) /\(HumiditySensor[2] >= Notifier[2] /\ HumiditySensor[2] = Mode[2] /\ HumiditySensor[2]= HumidityType[2] /\ HumidityType[2] = Soil[2] /\ HumidityType[2] >= Air[2] /\ ((Notifier[2]>0) -> (Alarm[2] + Bulb[2]<=2 /\ Contact[2]>0) ) /\ Mode[2]= Slave[2] + Master[2] ) /\(HumiditySensor[3] >= Notifier[3] /\ HumiditySensor[3] = Mode[3] /\ HumiditySensor[3]= HumidityType[3] /\ HumidityType[3] = Soil[3] /\ HumidityType[3] >= Air[3] /\ ((Notifier[3]>0) -> (Alarm[3] + Bulb[3]<=2 /\ Contact[3]>0) ) /\ Mode[3]= Slave[3] + Master[3] ) /\(HumiditySensor[4] >= Notifier[4] /\ HumiditySensor[4] = Mode[4] /\ HumiditySensor[4]= HumidityType[4] /\ HumidityType[4] = Soil[4] /\ HumidityType[4] >= Air[4] /\ ((Notifier[4]>0) -> (Alarm[4] + Bulb[4]<=2 /\ Contact[4]>0) ) /\ Mode[4]= Slave[4] + Master[4] ) /\(HumiditySensor[5] >= Notifier[5] /\ HumiditySensor[5] = Mode[5] /\ HumiditySensor[5]= HumidityType[5] /\ HumidityType[5] = Soil[5] /\ HumidityType[5] >= Air[5] /\ ((Notifier[5]>0) -> (Alarm[5] + Bulb[5]<=2 /\ Contact[5]>0) ) /\ Mode[5]= Slave[5] + Master[5] ) /\(HumiditySensor[6] >= Notifier[6] /\ HumiditySensor[6] = Mode[6] /\ HumiditySensor[6]= HumidityType[6] /\ HumidityType[6] = Soil[6] /\ HumidityType[6] >= Air[6] /\ ((Notifier[6]>0) -> (Alarm[6] + Bulb[6]<=2 /\ Contact[6]>0) ) /\ Mode[6]= Slave[6] + Master[6] ) /\(HumiditySensor[7] >= Notifier[7] /\ HumiditySensor[7] = Mode[7] /\ HumiditySensor[7]= HumidityType[7] /\ HumidityType[7] = Soil[7] /\ HumidityType[7] >= Air[7] /\ ((Notifier[7]>0) -> (Alarm[7] + Bulb[7]<=2 /\ Contact[7]>0) ) /\ Mode[7]= Slave[7] + Master[7] ) /\(Master[1]+Master[2]+Master[3]+Master[4]+Master[5]+Master[6]+Master[7]>=1 \/ Master[1]+Master[2]+Master[3]+Master[4]+Master[5]+Master[6]+Master[7]<=7 ) /\(Sensor>=LightSensor ) /\(Sensor=TempSensor ) /\(Sensor>=RainSensor ) /\(Sensor=SmartMeter ) /\(WaterSupplier=TreasholdAlam ));
constraint rapidAcc_Irrigation_SS = 1 -> (((Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9])=9 ) /\((Rotor[1]+Rotor[2]+Rotor[3]+Rotor[4]+Rotor[5]+Rotor[6]+Rotor[7]+Rotor[8]+Rotor[9])=9 ) /\(Rotation[1]=45 /\ Rotation[2]=45 /\ Rotation[3]=45 /\ Rotation[4]=45 /\ Rotation[5]=45 /\ Rotation[6]=45 /\ Rotation[7]=45 /\ Rotation[8]=45 /\ Rotation[9]=45 ) /\(PressureSp[1]=60 /\ PressureSp[2]=60 /\ PressureSp[3]=60 /\ PressureSp[4]=60 /\ PressureSp[5]=60 /\ PressureSp[6]=60 /\ PressureSp[7]=60 /\ PressureSp[8]=60 /\ PressureSp[9]=60 ));
constraint rapidEff_Irrigation_SS = 1 -> (((Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9])=4 /\ Sprinkler[1]+Sprinkler[3]+Sprinkler[7]+Sprinkler[9] =4 ) /\((Rotor[1]+Rotor[2]+Rotor[3]+Rotor[4]+Rotor[5]+Rotor[6]+Rotor[7]+Rotor[8]+Rotor[9])=4 ) /\(Rotation[1]=240 /\ Rotation[3]=240 /\ Rotation[7]=240 /\ Rotation[9]=240 ) /\(PressureSp[1]=30 /\ PressureSp[3]=30 /\ PressureSp[7]=30 /\ PressureSp[9]=30 ));
constraint slowIrrigation_SS = 1 -> ((Dripline=1 ) /\(Emitter=232 ));
constraint Natural_Irrigation_SS_state = 1 -> ((Dripline=0 ) /\((Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9])=0 ));
constraint natural_cooling_SS_state = 1 -> ((AirConditionner[1]+AirConditionner[2]+AirConditionner[3]+AirConditionner[4]=0 ));
constraint automatic_cooling_SS_state = 1 -> ((AirConditionner[1]+AirConditionner[2]+AirConditionner[3]+AirConditionner[4]=1 ) /\(Temp[1]+Temp[2]+Temp[3]+Temp[4]=20 /\ Temp[1]*Temp[2]=0 /\ Temp[3]*Temp[4]=0 /\ Temp[1]*Temp[3]=0 /\ Temp[2]*Temp[4]=0 ) /\(Speed[1]+Speed[2]+Speed[3]+Speed[4]=3 /\ Speed[1]*Speed[2]=0 /\ Speed[3]*Speed[4]=0 /\ Speed[1]*Speed[3]=0 /\ Speed[2]*Speed[4]=0 ) /\(Mode[1]+Mode[2]+Mode[3]+Mode[4]=2 /\ Mode[1]*Mode[2]=0 /\ Mode[3]*Mode[4]=0 /\ Mode[1]*Mode[3]=0 /\ Mode[2]*Mode[4]=0 ));
constraint acurate_moist_SS_state = 1 -> ((Master[1]+Master[2]+Master[3]+Master[4]+Master[5]+Master[6]+Master[7]=7 ));
constraint efficient_moit_SS_state = 1 -> ((Master[1]+Master[2]+Master[3]+Master[4]+Master[5]+Master[6]+Master[7]=3 ) /\(BatteryLevel[1]<=20 -> Master[1]=0 ) /\(BatteryLevel[2]<=20 -> Master[2]=0 ) /\(BatteryLevel[3]<=20 -> Master[3]=0 ) /\(BatteryLevel[4]<=20 -> Master[4]=0 ) /\(BatteryLevel[5]<=20 -> Master[5]=0 ) /\(BatteryLevel[6]<=20 -> Master[6]=0 ) /\(BatteryLevel[7]<=20 -> Master[7]=0 ));
constraint natural_brightness_SS_state = 1 -> ((OUT_open=1 ));
constraint automatic_brightness_SS_state = 1 -> ((OUT_close =1 ) /\(LightBulb[1]+LightBulb[2]+LightBulb[3]+LightBulb[4]+LightBulb[5]=3 ));
constraint efficientWater_SS_state = 1 -> ((RainWater=1 ));
constraint durableWater_SS_state = 1 -> ((Mainswater =1 ));
constraint global_NoE_state = 1 -> ((CenterPivor=0 ) /\(Humidifier=0 ) /\(MistDispenser=0 ) /\(Fertilizer=0 ) /\(Air[1]+Air[2]+Air[3]+Air[4]+Air[5]+Air[6]+Air[7]=0 ) /\(Router=0 ) /\(Distributed=0 ) /\(Shader=0 ) /\(SmartMeter=0 ) /\(RainSensor=0 ) /\(LightSensor=0 ) /\(TempSensor=0 ) /\(RainWater=0 ) /\(Fertilizer=0 ) /\(TreasholdAlam=0 ) /\(Actuator>0 -> Dripline=1 ) /\((Sprinkler[1]+Sprinkler[2]+Sprinkler[3]+Sprinkler[4]+Sprinkler[5]+Sprinkler[6]+Sprinkler[7]+Sprinkler[8]+Sprinkler[9])=0 ) /\(Actuator>0 -> (AirConditionner[1]+AirConditionner[2]+AirConditionner[3]+AirConditionner[4]=0 \/ AirConditionner[1]+AirConditionner[2]+AirConditionner[3]+AirConditionner[4] = 1) ) /\(LightBulb[1]+LightBulb[2]+LightBulb[3]+LightBulb[4]+LightBulb[5]=0 ) /\(HumiditySensor[1] >= Notifier[1] /\ HumiditySensor[1] = Mode[1] /\ HumiditySensor[1]= HumidityType[1] /\ HumidityType[1] = Soil[1] /\ HumidityType[1] >= Air[1] /\ (Notifier[1]>0 -> Contact[1]=1) /\ Mode[1]= Slave[1] + Master[1] ) /\(HumiditySensor[2] >= Notifier[2] /\ HumiditySensor[2] = Mode[2] /\ HumiditySensor[2]= HumidityType[2] /\ HumidityType[2] = Soil[2] /\ HumidityType[2] >= Air[2] /\ (Notifier[2]>0 -> Contact[2]=1) /\ Mode[2]= Slave[2] + Master[2] ) /\(HumiditySensor[3] >= Notifier[3] /\ HumiditySensor[3] = Mode[3] /\ HumiditySensor[3]= HumidityType[3] /\ HumidityType[3] = Soil[3] /\ HumidityType[3] >= Air[3] /\ (Notifier[3]>0 -> Contact[3]=1) /\ Mode[3]= Slave[3] + Master[3] ) /\(HumiditySensor[4] >= Notifier[4] /\ HumiditySensor[4] = Mode[4] /\ HumiditySensor[4]= HumidityType[4] /\ HumidityType[4] = Soil[4] /\ HumidityType[4] >= Air[4] /\ (Notifier[4]>0 -> Contact[4]=1) /\ Mode[4]= Slave[4] + Master[4] ) /\(HumiditySensor[5] >= Notifier[5] /\ HumiditySensor[5] = Mode[5] /\ HumiditySensor[5]= HumidityType[5] /\ HumidityType[5] = Soil[5] /\ HumidityType[5] >= Air[5] /\ (Notifier[5]>0 -> Contact[5]=1) /\ Mode[5]= Slave[5] + Master[5] ) /\(HumiditySensor[6] >= Notifier[6] /\ HumiditySensor[6] = Mode[6] /\ HumiditySensor[6]= HumidityType[6] /\ HumidityType[6] = Soil[6] /\ HumidityType[6] >= Air[6] /\ (Notifier[6]>0 -> Contact[6]=1) /\ Mode[6]= Slave[6] + Master[6] ) /\(HumiditySensor[7] >= Notifier[7] /\ HumiditySensor[7] = Mode[7] /\ HumiditySensor[7]= HumidityType[7] /\ HumidityType[7] = Soil[7] /\ HumidityType[7] >= Air[7] /\ (Notifier[7]>0 -> Contact[7]=1) /\ Mode[7]= Slave[7] + Master[7] ) /\(Alarm[1] + Contact[1] + Bulb[1] = 1 ) /\(Alarm[2] + Contact[2] + Bulb[2] = 1 ) /\(Alarm[3] + Contact[3] + Bulb[3] = 1 ) /\(Alarm[4] + Contact[4] + Bulb[4] = 1 ) /\(Alarm[5] + Contact[5] + Bulb[5] = 1 ) /\(Alarm[6] + Contact[6] + Bulb[6] = 1 ) /\(Alarm[7] + Contact[7] + Bulb[7] = 1 ));
constraint Natural_Irrigation_NoE_state = 1 -> ((Dripline=1 ) /\(Emitter=114 ));
constraint natural_heating_NoE_state = 1 -> ((AirConditionner[1]+AirConditionner[2]+AirConditionner[3]+AirConditionner[4]=0 ));
constraint automatic_heating_NoE_state = 1 -> ((AirConditionner[1]+AirConditionner[2]+AirConditionner[3]+AirConditionner[4]=1 ) /\(Temp[1]+Temp[2]+Temp[3]+Temp[4]=25 /\ Temp[1]*Temp[2]=0 /\ Temp[3]*Temp[4]=0 /\ Temp[1]*Temp[3]=0 /\ Temp[2]*Temp[4]=0 ) /\(Speed[1]+Speed[2]+Speed[3]+Speed[4]=2 /\ Speed[1]*Speed[2]=0 /\ Speed[3]*Speed[4]=0 /\ Speed[1]*Speed[3]=0 /\ Speed[2]*Speed[4]=0 ) /\(Mode[1]+Mode[2]+Mode[3]+Mode[4]=3 /\ Mode[1]*Mode[2]=0 /\ Mode[3]*Mode[4]=0 /\ Mode[1]*Mode[3]=0 /\ Mode[2]*Mode[4]=0 ));
constraint survival_moist_NoE_state = 1 -> ((Master[1]+Master[2]+Master[3]+Master[4]+Master[5]+Master[6]+Master[7]=1 ) /\(BatteryLevel[1]<=20 -> Master[1]=0 ) /\(BatteryLevel[2]<=20 -> Master[2]=0 ) /\(BatteryLevel[3]<=20 -> Master[3]=0 ) /\(BatteryLevel[4]<=20 -> Master[4]=0 ) /\(BatteryLevel[5]<=20 -> Master[5]=0 ) /\(BatteryLevel[6]<=20 -> Master[6]=0 ) /\(BatteryLevel[7]<=20 -> Master[7]=0 ));


%Constraints---------------------------------------------------
	%on the hierarchy

constraint AW = 1 <-> global_AW = 1;
constraint global_AW = global_AW_state ;
constraint AW = 1 <-> irrigation_AW = 1;
constraint irrigation_AW = Natural_Irrigation_AW_state + automatic_AW  ;
constraint automatic_AW = 1 <-> automatic_CL_AW = 1;
constraint automatic_CL_AW = rapidIrrigation_AW + slowIrrigation_AW  ;
constraint automatic_CL_AW =  automatic_AW  * ( automatic_CL_AW );
constraint AW = 1 <-> heating_AW = 1;
constraint heating_AW = normal_heating_AW_state + high_heating_AW_state + open_air_AW_state + extra_heating_AW_state  ;
constraint AW = 1 <-> moitSensing_AW = 1;
constraint moitSensing_AW = acurate_moist_AW_state + efficient_moit_AW_state  ;
constraint AW = 1 <-> brightneAW_AW = 1;
constraint brightneAW_AW = natural_brightness_AW_state + automatic_brightness_AW_state  ;
constraint AW = 1 <-> waterSource_AW = 1;
constraint waterSource_AW = efficientWater_AW_state + durableWater_AW_state  ;
constraint global_AW + irrigation_AW + heating_AW + moitSensing_AW + brightneAW_AW + waterSource_AW  =  AW  * ( global_AW + irrigation_AW + heating_AW + moitSensing_AW + brightneAW_AW + waterSource_AW  );
constraint SS = 1 <-> global_SS = 1;
constraint global_SS = global_SS_state ;
constraint SS = 1 <-> irrigation_SS = 1;
constraint irrigation_SS = Natural_Irrigation_SS_state + automatic_SS  ;
constraint automatic_SS = 1 <-> automatic_CL_SS = 1;
constraint automatic_CL_SS = rapidAcc_Irrigation_SS + rapidEff_Irrigation_SS + slowIrrigation_SS  ;
constraint automatic_CL_SS =  automatic_SS  * ( automatic_CL_SS );
constraint SS = 1 <-> heating_SS = 1;
constraint heating_SS = natural_cooling_SS_state + automatic_cooling_SS_state  ;
constraint SS = 1 <-> moitSensing_SS = 1;
constraint moitSensing_SS = acurate_moist_SS_state + efficient_moit_SS_state  ;
constraint SS = 1 <-> brightness_SS = 1;
constraint brightness_SS = natural_brightness_SS_state + automatic_brightness_SS_state  ;
constraint SS = 1 <-> waterSource_SS = 1;
constraint waterSource_SS = efficientWater_SS_state + durableWater_SS_state  ;
constraint global_SS + irrigation_SS + heating_SS + moitSensing_SS + brightness_SS + waterSource_SS  =  SS  * ( global_SS + irrigation_SS + heating_SS + moitSensing_SS + brightness_SS + waterSource_SS  );
constraint NoE = 1 <-> global_NoE = 1;
constraint global_NoE = global_NoE_state ;
constraint NoE = 1 <-> irrigation_NoE = 1;
constraint irrigation_NoE = Natural_Irrigation_NoE_state ;
constraint NoE = 1 <-> heating_NoE = 1;
constraint heating_NoE = natural_heating_NoE_state + automatic_heating_NoE_state  ;
constraint NoE = 1 <-> moitSensing_NoE = 1;
constraint moitSensing_NoE = survival_moist_NoE_state ;
constraint global_NoE + irrigation_NoE + heating_NoE + moitSensing_NoE  =  NoE  * ( global_NoE + irrigation_NoE + heating_NoE + moitSensing_NoE  );
	%on full transitions

constraint (((PowerFailure=1)) /\ (SS=1 )) -> NoE = 1;
constraint (((Month>=10 \/ Month<4)) /\ (SS=1 )) -> AW = 1;
constraint (((PowerFailure=1)) /\ (SS=1 )) -> NoE = 1;
constraint (((Month>=4 \/ Month<10)) /\ (SS=1 )) -> SS = 1;
constraint (((Rain=0 \/ IN_close=1)) /\ (SS=1 )) -> automatic_SS = 1;
constraint (((Rain=1 /\ IN_open=1)) /\ (SS=1 )) -> Natural_Irrigation_SS_state = 1;
constraint (((MinTankWater<TankLevel /\ TankLevel>=OpTankWater)) /\ (automatic_SS=1 )) -> rapidEff_Irrigation_SS = 1;
constraint (((TankLevel< MinTankWater)) /\ (automatic_SS=1 )) -> slowIrrigation_SS = 1;
constraint (((MinTankWater<TankLevel /\ TankLevel<OpTankWater)) /\ (automatic_SS=1 )) -> rapidEff_Irrigation_SS = 1;
constraint (((TankLevel>OpTankWater)) /\ (automatic_SS=1 )) -> rapidAcc_Irrigation_SS = 1;
constraint (((TankLevel>OpTankWater)) /\ (automatic_SS=1 )) -> rapidAcc_Irrigation_SS = 1;
constraint (((Temperature>30)) /\ (SS=1 )) -> automatic_cooling_SS_state = 1;
constraint (((Temperature<=30)) /\ (SS=1 )) -> natural_cooling_SS_state = 1;
constraint (((BatteryLevel[1]<60 \/ BatteryLevel[2]<60 \/ BatteryLevel[3]<60 \/ BatteryLevel[4]<60 \/ BatteryLevel[5]<60 \/ BatteryLevel[6]<60 \/ BatteryLevel[7]<60)) /\ (SS=1 )) -> efficient_moit_SS_state = 1;
constraint (((BatteryLevel[1]>= 60 /\ BatteryLevel[2]>= 60 /\ BatteryLevel[3]>= 60 /\ BatteryLevel[4]>= 60 /\ BatteryLevel[5]>= 60 /\ BatteryLevel[6]>= 60 /\ BatteryLevel[7]>= 60)) /\ (SS=1 )) -> acurate_moist_SS_state = 1;
constraint ((((Rain=0 \/ HumidityLevel<NormalHumidity))) /\ (SS=1 )) -> natural_brightness_SS_state = 1;
constraint (((Rain=1 /\ HumidityLevel>NormalHumidity)) /\ (SS=1 )) -> automatic_brightness_SS_state = 1;
constraint (((TankLevel<MinTankWater)) /\ (SS=1 )) -> durableWater_SS_state = 1;
constraint (((TankLevel>=MinTankWater)) /\ (SS=1 )) -> efficientWater_SS_state = 1;
constraint (((Rain=0 \/ IN_close=1)) /\ (AW=1 )) -> automatic_AW = 1;
constraint (((Rain=1 /\ IN_open=1)) /\ (AW=1 )) -> Natural_Irrigation_AW_state = 1;
constraint (((TankLevel<OpTankWater)) /\ (automatic_AW=1 )) -> rapidIrrigation_AW = 1;
constraint (((TankLevel>OpTankWater)) /\ (automatic_AW=1 )) -> slowIrrigation_AW = 1;
constraint (((IN_close=1 /\ Temperature>5 /\ Temperature<=10)) /\ (AW=1 )) -> high_heating_AW_state = 1;
constraint (((IN_close=1 /\ Temperature>=10)) /\ (AW=1 )) -> normal_heating_AW_state = 1;
constraint (((IN_close=1 /\ Temperature>=10)) /\ (AW=1 )) -> normal_heating_AW_state = 1;
constraint (((IN_close=1 /\ Temperature<=5)) /\ (AW=1 )) -> extra_heating_AW_state = 1;
constraint (((IN_open=1)) /\ (AW=1 )) -> open_air_AW_state = 1;
constraint (((IN_close=1 /\ Temperature<=5)) /\ (AW=1 )) -> extra_heating_AW_state = 1;
constraint (((IN_close=1 /\ Temperature>5 /\ Temperature<=10)) /\ (AW=1 )) -> high_heating_AW_state = 1;
constraint (((IN_close=1 /\ Temperature>5 /\ Temperature<=10)) /\ (AW=1 )) -> high_heating_AW_state = 1;
constraint (((BatteryLevel[1]<50 \/ BatteryLevel[2]<50 \/ BatteryLevel[3]<50 \/ BatteryLevel[4]<50 \/ BatteryLevel[5]<50 \/BatteryLevel[6]<50 \/ BatteryLevel[7]<50)) /\ (AW=1 )) -> efficient_moit_AW_state = 1;
constraint (((BatteryLevel[1]>= 50 /\ BatteryLevel[2]>= 50 /\ BatteryLevel[3]>= 50 /\ BatteryLevel[4]>= 50 /\ BatteryLevel[5]>= 50 /\BatteryLevel[6]>= 50 /\ BatteryLevel[7]>= 50)) /\ (AW=1 )) -> acurate_moist_AW_state = 1;
constraint ((((EConsumption>OpConsumption /\ Brightness>=opBrightness) \/ (EConsumption<OpConsumption /\ Brightness>=minBrightness)) /\ (Rain=0 \/ HumidityLevel<=NormalHumidity)) /\ (AW=1 )) -> natural_brightness_AW_state = 1;
constraint (((EConsumption>OpConsumption /\ Brightness<opBrightness) \/ (Brightness<minBrightness) \/ (Rain=1 /\ HumidityLevel>NormalHumidity)) /\ (AW=1 )) -> automatic_brightness_AW_state = 1;
constraint (((TankLevel>=MinTankWater)) /\ (AW=1 )) -> efficientWater_AW_state = 1;
constraint (((TankLevel<MinTankWater)) /\ (AW=1 )) -> durableWater_AW_state = 1;
constraint (((Month=10)) /\ (NoE=1 )) -> automatic_heating_NoE_state = 1;
constraint (((Month=4)) /\ (NoE=1 )) -> natural_heating_NoE_state = 1;

	%on start transitions
constraint SS = 1 -> (global_SS_state =1 );
constraint SS = 1 -> (Natural_Irrigation_SS_state =1 \/ Natural_Irrigation_SS_state+automatic_SS= 1);
constraint SS = 1 -> (natural_cooling_SS_state =1 \/ natural_cooling_SS_state+automatic_cooling_SS_state= 1);
constraint SS = 1 -> (acurate_moist_SS_state =1 \/ acurate_moist_SS_state+efficient_moit_SS_state= 1);
constraint SS = 1 -> (natural_brightness_SS_state =1 \/ natural_brightness_SS_state+automatic_brightness_SS_state= 1);
constraint SS = 1 -> (efficientWater_SS_state =1 \/ efficientWater_SS_state+durableWater_SS_state= 1);
constraint AW = 1 -> (global_AW_state =1 );
constraint AW = 1 -> (Natural_Irrigation_AW_state =1 \/ Natural_Irrigation_AW_state+automatic_AW= 1);
constraint AW = 1 -> (normal_heating_AW_state =1 \/ normal_heating_AW_state+high_heating_AW_state+open_air_AW_state+extra_heating_AW_state= 1);
constraint AW = 1 -> (acurate_moist_AW_state =1 \/ acurate_moist_AW_state+efficient_moit_AW_state= 1);
constraint AW = 1 -> (natural_brightness_AW_state =1 \/ natural_brightness_AW_state+automatic_brightness_AW_state= 1);
constraint AW = 1 -> (efficientWater_AW_state =1 \/ efficientWater_AW_state+durableWater_AW_state= 1);
constraint NoE = 1 -> (global_NoE_state =1 );
constraint NoE = 1 -> (Natural_Irrigation_NoE_state =1 );
constraint NoE = 1 -> (natural_heating_NoE_state =1 \/ natural_heating_NoE_state+automatic_heating_NoE_state= 1);
constraint NoE = 1 -> (survival_moist_NoE_state =1 );

solve maximize Flex;
