stateMachine HumiditySensorConf

//Boolean humiditySensor
//Boolean notifier
//Boolean mode
//Boolean sensors
//Boolean alarm
//Boolean contact
//Boolean bulb
//Boolean slave
//Boolean master
//Boolean airSensor
//Boolean soilSensor

Boolean humiditySensor [1,7]
Boolean notifier[1,7]
Boolean mode[1,7]
Boolean sensors[1,7]
Boolean alarm[1,7]
Boolean contact[1,7]
Boolean bulb[1,7]
Boolean slave[1,7]
Boolean master[1,7]
Boolean airSensor[1,7]
Boolean soilSensor[1,7]

Float Param battery_level[1,7]

///************************///
///* FLEXIBLE CONSTRAINTS *///
///************************///

			humiditySensor[1] >= notifier[1]
			humiditySensor[1] = mode[1]
			humiditySensor[1]= sensors[1]
			sensors[1] = soilSensor[1]
			sensors[1] >= airSensor[1]
			notifier[1] * 3 >= alarm[1] + contact[1] + bulb[1]
			mode[1]= slave[1] + master[1]
			
			humiditySensor[2] >= notifier[2]
			humiditySensor[2] = mode[2]
			humiditySensor[2]= sensors[2]
			sensors[2] = soilSensor[2]
			sensors[2] >= airSensor[2]
			notifier[2] * 3 >= alarm[2] + contact[2] + bulb[2]
			mode[2]= slave[2] + master[2]
			
			humiditySensor[3] >= notifier[3]
			humiditySensor[3] = mode[3]
			humiditySensor[3]= sensors[3]
			sensors[3] = soilSensor[3]
			sensors[3] >= airSensor[3]
			notifier[3] * 3 >= alarm[3] + contact[3] + bulb[3]
			mode[3]= slave[3] + master[3]
			
			humiditySensor[4] >= notifier[4]
			humiditySensor[4] = mode[4]
			humiditySensor[4]= sensors[4]
			sensors[4] = soilSensor[4]
			sensors[4] >= airSensor[4]
			notifier[4] * 3 >= alarm[4] + contact[4] + bulb[4]
			mode[4]= slave[4] + master[4]
			
			humiditySensor[5] >= notifier[5]
			humiditySensor[5] = mode[5]
			humiditySensor[5]= sensors[5]
			sensors[5] = soilSensor[5]
			sensors[5] >= airSensor[5]
			notifier[5] * 3 >= alarm[5] + contact[5] + bulb[5]
			mode[5]= slave[5] + master[5]
			
			humiditySensor[6] >= notifier[6]
			humiditySensor[6] = mode[6]
			humiditySensor[6]= sensors[6]
			sensors[6] = soilSensor[6]
			sensors[6] >= airSensor[6]
			notifier[6] * 3 >= alarm[6] + contact[6] + bulb[6]
			mode[6]= slave[6] + master[6]
			
			humiditySensor[7] >= notifier[7]
			humiditySensor[7] = mode[7]
			humiditySensor[7]= sensors[7]
			sensors[7] = soilSensor[7]
			sensors[7] >= airSensor[7]
			notifier[7] * 3 >= alarm[7] + contact[7] + bulb[7]
			mode[7]= slave[7] + master[7]

compositeState SS	
	concernLevel SS_Sensor_battery
		simpleConstraintState SS_accurate_Sensing
			master[1]+master[2]+master[4]+master[4]+master[5]+master[6]+master[7]=3
		
		simpleConstraintState SS_efficient_Sensing
			master[1]+master[2]+master[4]+master[4]+master[5]+master[6]+master[7]=1
			battery_level[1]<=20 -> master[1]=0
			battery_level[2]<=20 -> master[2]=0
			battery_level[3]<=20 -> master[3]=0
			battery_level[4]<=20 -> master[4]=0
			battery_level[5]<=20 -> master[5]=0
			battery_level[6]<=20 -> master[6]=0
			battery_level[7]<=20 -> master[7]=0
	end_concernLevel SS_Sensor_battery
end_compositeState SS


compositeState AW
	concernLevel AW_Sensor_battery
		simpleConstraintState AW_accurate_Sensing
			master[1]+master[2]+master[4]+master[4]+master[5]+master[6]+master[7]=7
		
		simpleConstraintState AW_efficient_Sensing
			master[1]+master[2]+master[4]+master[4]+master[5]+master[6]+master[7]=3
			battery_level[1]<=20 -> master[1]=0
			battery_level[2]<=20 -> master[2]=0
			battery_level[3]<=20 -> master[3]=0
			battery_level[4]<=20 -> master[4]=0
			battery_level[5]<=20 -> master[5]=0
			battery_level[6]<=20 -> master[6]=0
			battery_level[7]<=20 -> master[7]=0
	end_concernLevel AW_Sensor_battery
end_compositeState AW


compositeState NoE
	concernLevel NoE_Sensor_battery
		simpleConstraintState NoE_Sensing
			master[1]+master[2]+master[4]+master[4]+master[5]+master[6]+master[7]=1
	end_concernLevel NoE_Sensor_battery
end_compositeState SS


When SS if (battery_level[1]<60 \/ battery_level[2] <60 \/ battery_level[3] <60 \/ battery_level[4] <60 \/ battery_level[5] <60 \/ battery_level[6] <60 \/ battery_level[7] <60) transition from SS.SS_Sensor_battery.SS_accurate_Sensing to SS.SS_Sensor_battery.SS_efficient_Sensing 




